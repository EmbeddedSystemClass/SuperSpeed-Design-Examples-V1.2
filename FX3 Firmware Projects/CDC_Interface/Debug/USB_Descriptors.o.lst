   1              		.cpu arm926ej-s
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"USB_Descriptors.c"
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.global	CyFxUSB30DeviceDscr
  22              		.section	.rodata.CyFxUSB30DeviceDscr,"a",%progbits
  23              		.align	5
  26              	CyFxUSB30DeviceDscr:
  27 0000 12       		.byte	18
  28 0001 01       		.byte	1
  29 0002 00       		.byte	0
  30 0003 03       		.byte	3
  31 0004 02       		.byte	2
  32 0005 00       		.byte	0
  33 0006 00       		.byte	0
  34 0007 09       		.byte	9
  35 0008 42       		.byte	66
  36 0009 42       		.byte	66
  37 000a 03       		.byte	3
  38 000b EC       		.byte	-20
  39 000c 00       		.byte	0
  40 000d 00       		.byte	0
  41 000e 01       		.byte	1
  42 000f 02       		.byte	2
  43 0010 00       		.byte	0
  44 0011 01       		.byte	1
  45              		.global	CyFxUSB20DeviceDscr
  46 0012 00000000 		.section	.rodata.CyFxUSB20DeviceDscr,"a",%progbits
  46      00000000 
  46      00000000 
  46      0000
  47              		.align	5
  50              	CyFxUSB20DeviceDscr:
  51 0000 12       		.byte	18
  52 0001 01       		.byte	1
  53 0002 10       		.byte	16
  54 0003 02       		.byte	2
  55 0004 02       		.byte	2
  56 0005 00       		.byte	0
  57 0006 00       		.byte	0
  58 0007 40       		.byte	64
  59 0008 42       		.byte	66
  60 0009 42       		.byte	66
  61 000a 03       		.byte	3
  62 000b EC       		.byte	-20
  63 000c 00       		.byte	0
  64 000d 00       		.byte	0
  65 000e 01       		.byte	1
  66 000f 02       		.byte	2
  67 0010 00       		.byte	0
  68 0011 01       		.byte	1
  69              		.global	CyFxUSBBOSDscr
  70 0012 00000000 		.section	.rodata.CyFxUSBBOSDscr,"a",%progbits
  70      00000000 
  70      00000000 
  70      0000
  71              		.align	5
  74              	CyFxUSBBOSDscr:
  75 0000 05       		.byte	5
  76 0001 0F       		.byte	15
  77 0002 16       		.byte	22
  78 0003 00       		.byte	0
  79 0004 02       		.byte	2
  80 0005 07       		.byte	7
  81 0006 10       		.byte	16
  82 0007 02       		.byte	2
  83 0008 02       		.byte	2
  84 0009 00       		.byte	0
  85 000a 00       		.byte	0
  86 000b 00       		.byte	0
  87 000c 0A       		.byte	10
  88 000d 10       		.byte	16
  89 000e 03       		.byte	3
  90 000f 00       		.byte	0
  91 0010 0E       		.byte	14
  92 0011 00       		.byte	0
  93 0012 03       		.byte	3
  94 0013 00       		.byte	0
  95 0014 00       		.byte	0
  96 0015 00       		.byte	0
  97              		.global	CyFxUSBDeviceQualDscr
  98 0016 00000000 		.section	.rodata.CyFxUSBDeviceQualDscr,"a",%progbits
  98      00000000 
  98      0000
  99              		.align	5
 102              	CyFxUSBDeviceQualDscr:
 103 0000 0A       		.byte	10
 104 0001 06       		.byte	6
 105 0002 00       		.byte	0
 106 0003 02       		.byte	2
 107 0004 02       		.byte	2
 108 0005 00       		.byte	0
 109 0006 00       		.byte	0
 110 0007 08       		.byte	8
 111 0008 01       		.byte	1
 112 0009 00       		.byte	0
 113              		.global	CyFxUSBSSConfigDscr
 114 000a 00000000 		.section	.rodata.CyFxUSBSSConfigDscr,"a",%progbits
 114      00000000 
 114      00000000 
 114      00000000 
 114      00000000 
 115              		.align	5
 118              	CyFxUSBSSConfigDscr:
 119 0000 09       		.byte	9
 120 0001 02       		.byte	2
 121 0002 55       		.byte	85
 122 0003 00       		.byte	0
 123 0004 02       		.byte	2
 124 0005 01       		.byte	1
 125 0006 03       		.byte	3
 126 0007 80       		.byte	-128
 127 0008 19       		.byte	25
 128 0009 09       		.byte	9
 129 000a 04       		.byte	4
 130 000b 00       		.byte	0
 131 000c 00       		.byte	0
 132 000d 01       		.byte	1
 133 000e 02       		.byte	2
 134 000f 02       		.byte	2
 135 0010 01       		.byte	1
 136 0011 00       		.byte	0
 137 0012 05       		.byte	5
 138 0013 24       		.byte	36
 139 0014 00       		.byte	0
 140 0015 10       		.byte	16
 141 0016 01       		.byte	1
 142 0017 04       		.byte	4
 143 0018 24       		.byte	36
 144 0019 02       		.byte	2
 145 001a 02       		.byte	2
 146 001b 05       		.byte	5
 147 001c 24       		.byte	36
 148 001d 06       		.byte	6
 149 001e 00       		.byte	0
 150 001f 01       		.byte	1
 151 0020 05       		.byte	5
 152 0021 24       		.byte	36
 153 0022 01       		.byte	1
 154 0023 00       		.byte	0
 155 0024 01       		.byte	1
 156 0025 07       		.byte	7
 157 0026 05       		.byte	5
 158 0027 81       		.byte	-127
 159 0028 03       		.byte	3
 160 0029 40       		.byte	64
 161 002a 00       		.byte	0
 162 002b 02       		.byte	2
 163 002c 06       		.byte	6
 164 002d 30       		.byte	48
 165 002e 00       		.byte	0
 166 002f 00       		.byte	0
 167 0030 40       		.byte	64
 168 0031 00       		.byte	0
 169 0032 09       		.byte	9
 170 0033 04       		.byte	4
 171 0034 01       		.byte	1
 172 0035 00       		.byte	0
 173 0036 02       		.byte	2
 174 0037 0A       		.byte	10
 175 0038 00       		.byte	0
 176 0039 00       		.byte	0
 177 003a 00       		.byte	0
 178 003b 07       		.byte	7
 179 003c 05       		.byte	5
 180 003d 02       		.byte	2
 181 003e 02       		.byte	2
 182 003f 00       		.byte	0
 183 0040 04       		.byte	4
 184 0041 00       		.byte	0
 185 0042 06       		.byte	6
 186 0043 30       		.byte	48
 187 0044 00       		.byte	0
 188 0045 00       		.byte	0
 189 0046 00       		.byte	0
 190 0047 04       		.byte	4
 191 0048 07       		.byte	7
 192 0049 05       		.byte	5
 193 004a 82       		.byte	-126
 194 004b 02       		.byte	2
 195 004c 00       		.byte	0
 196 004d 04       		.byte	4
 197 004e 00       		.byte	0
 198 004f 06       		.byte	6
 199 0050 30       		.byte	48
 200 0051 00       		.byte	0
 201 0052 00       		.byte	0
 202 0053 00       		.byte	0
 203 0054 04       		.byte	4
 204              		.global	CyFxUSBHSConfigDscr
 205 0055 00000000 		.section	.rodata.CyFxUSBHSConfigDscr,"a",%progbits
 205      00000000 
 205      000000
 206              		.align	5
 209              	CyFxUSBHSConfigDscr:
 210 0000 09       		.byte	9
 211 0001 02       		.byte	2
 212 0002 43       		.byte	67
 213 0003 00       		.byte	0
 214 0004 02       		.byte	2
 215 0005 01       		.byte	1
 216 0006 03       		.byte	3
 217 0007 80       		.byte	-128
 218 0008 64       		.byte	100
 219 0009 09       		.byte	9
 220 000a 04       		.byte	4
 221 000b 00       		.byte	0
 222 000c 00       		.byte	0
 223 000d 01       		.byte	1
 224 000e 02       		.byte	2
 225 000f 02       		.byte	2
 226 0010 01       		.byte	1
 227 0011 00       		.byte	0
 228 0012 05       		.byte	5
 229 0013 24       		.byte	36
 230 0014 00       		.byte	0
 231 0015 10       		.byte	16
 232 0016 01       		.byte	1
 233 0017 04       		.byte	4
 234 0018 24       		.byte	36
 235 0019 02       		.byte	2
 236 001a 02       		.byte	2
 237 001b 05       		.byte	5
 238 001c 24       		.byte	36
 239 001d 06       		.byte	6
 240 001e 00       		.byte	0
 241 001f 01       		.byte	1
 242 0020 05       		.byte	5
 243 0021 24       		.byte	36
 244 0022 01       		.byte	1
 245 0023 00       		.byte	0
 246 0024 01       		.byte	1
 247 0025 07       		.byte	7
 248 0026 05       		.byte	5
 249 0027 81       		.byte	-127
 250 0028 03       		.byte	3
 251 0029 40       		.byte	64
 252 002a 00       		.byte	0
 253 002b 02       		.byte	2
 254 002c 09       		.byte	9
 255 002d 04       		.byte	4
 256 002e 01       		.byte	1
 257 002f 00       		.byte	0
 258 0030 02       		.byte	2
 259 0031 0A       		.byte	10
 260 0032 00       		.byte	0
 261 0033 00       		.byte	0
 262 0034 00       		.byte	0
 263 0035 07       		.byte	7
 264 0036 05       		.byte	5
 265 0037 02       		.byte	2
 266 0038 02       		.byte	2
 267 0039 00       		.byte	0
 268 003a 02       		.byte	2
 269 003b 00       		.byte	0
 270 003c 07       		.byte	7
 271 003d 05       		.byte	5
 272 003e 82       		.byte	-126
 273 003f 02       		.byte	2
 274 0040 00       		.byte	0
 275 0041 02       		.byte	2
 276 0042 00       		.byte	0
 277              		.global	CyFxUSBFSConfigDscr
 278 0043 00000000 		.section	.rodata.CyFxUSBFSConfigDscr,"a",%progbits
 278      00000000 
 278      00000000 
 278      00000000 
 278      00000000 
 279              		.align	5
 282              	CyFxUSBFSConfigDscr:
 283 0000 09       		.byte	9
 284 0001 02       		.byte	2
 285 0002 43       		.byte	67
 286 0003 00       		.byte	0
 287 0004 02       		.byte	2
 288 0005 01       		.byte	1
 289 0006 03       		.byte	3
 290 0007 80       		.byte	-128
 291 0008 64       		.byte	100
 292 0009 09       		.byte	9
 293 000a 04       		.byte	4
 294 000b 00       		.byte	0
 295 000c 00       		.byte	0
 296 000d 01       		.byte	1
 297 000e 02       		.byte	2
 298 000f 02       		.byte	2
 299 0010 01       		.byte	1
 300 0011 00       		.byte	0
 301 0012 05       		.byte	5
 302 0013 24       		.byte	36
 303 0014 00       		.byte	0
 304 0015 10       		.byte	16
 305 0016 01       		.byte	1
 306 0017 04       		.byte	4
 307 0018 24       		.byte	36
 308 0019 02       		.byte	2
 309 001a 02       		.byte	2
 310 001b 05       		.byte	5
 311 001c 24       		.byte	36
 312 001d 06       		.byte	6
 313 001e 00       		.byte	0
 314 001f 01       		.byte	1
 315 0020 05       		.byte	5
 316 0021 24       		.byte	36
 317 0022 01       		.byte	1
 318 0023 00       		.byte	0
 319 0024 01       		.byte	1
 320 0025 07       		.byte	7
 321 0026 05       		.byte	5
 322 0027 01       		.byte	1
 323 0028 03       		.byte	3
 324 0029 10       		.byte	16
 325 002a 00       		.byte	0
 326 002b 02       		.byte	2
 327 002c 09       		.byte	9
 328 002d 04       		.byte	4
 329 002e 01       		.byte	1
 330 002f 00       		.byte	0
 331 0030 02       		.byte	2
 332 0031 0A       		.byte	10
 333 0032 00       		.byte	0
 334 0033 00       		.byte	0
 335 0034 00       		.byte	0
 336 0035 07       		.byte	7
 337 0036 05       		.byte	5
 338 0037 02       		.byte	2
 339 0038 02       		.byte	2
 340 0039 40       		.byte	64
 341 003a 00       		.byte	0
 342 003b 00       		.byte	0
 343 003c 07       		.byte	7
 344 003d 05       		.byte	5
 345 003e 82       		.byte	-126
 346 003f 02       		.byte	2
 347 0040 40       		.byte	64
 348 0041 00       		.byte	0
 349 0042 00       		.byte	0
 350              		.global	CyFxUSBStringLangIDDscr
 351 0043 00000000 		.section	.rodata.CyFxUSBStringLangIDDscr,"a",%progbits
 351      00000000 
 351      00000000 
 351      00000000 
 351      00000000 
 352              		.align	5
 355              	CyFxUSBStringLangIDDscr:
 356 0000 04       		.byte	4
 357 0001 03       		.byte	3
 358 0002 09       		.byte	9
 359 0003 04       		.byte	4
 360              		.global	CyFxUSBManufactureDscr
 361 0004 00000000 		.section	.rodata.CyFxUSBManufactureDscr,"a",%progbits
 361      00000000 
 361      00000000 
 361      00000000 
 361      00000000 
 362              		.align	5
 365              	CyFxUSBManufactureDscr:
 366 0000 2C       		.byte	44
 367 0001 03       		.byte	3
 368 0002 55       		.byte	85
 369 0003 00       		.byte	0
 370 0004 53       		.byte	83
 371 0005 00       		.byte	0
 372 0006 42       		.byte	66
 373 0007 00       		.byte	0
 374 0008 20       		.byte	32
 375 0009 00       		.byte	0
 376 000a 44       		.byte	68
 377 000b 00       		.byte	0
 378 000c 65       		.byte	101
 379 000d 00       		.byte	0
 380 000e 73       		.byte	115
 381 000f 00       		.byte	0
 382 0010 69       		.byte	105
 383 0011 00       		.byte	0
 384 0012 67       		.byte	103
 385 0013 00       		.byte	0
 386 0014 6E       		.byte	110
 387 0015 00       		.byte	0
 388 0016 20       		.byte	32
 389 0017 00       		.byte	0
 390 0018 42       		.byte	66
 391 0019 00       		.byte	0
 392 001a 79       		.byte	121
 393 001b 00       		.byte	0
 394 001c 20       		.byte	32
 395 001d 00       		.byte	0
 396 001e 45       		.byte	69
 397 001f 00       		.byte	0
 398 0020 78       		.byte	120
 399 0021 00       		.byte	0
 400 0022 61       		.byte	97
 401 0023 00       		.byte	0
 402 0024 6D       		.byte	109
 403 0025 00       		.byte	0
 404 0026 70       		.byte	112
 405 0027 00       		.byte	0
 406 0028 6C       		.byte	108
 407 0029 00       		.byte	0
 408 002a 65       		.byte	101
 409 002b 00       		.byte	0
 410              		.global	CyFxUSBProductDscr
 411 002c 00000000 		.section	.rodata.CyFxUSBProductDscr,"a",%progbits
 411      00000000 
 411      00000000 
 411      00000000 
 411      00000000 
 412              		.align	5
 415              	CyFxUSBProductDscr:
 416 0000 1C       		.byte	28
 417 0001 03       		.byte	3
 418 0002 43       		.byte	67
 419 0003 00       		.byte	0
 420 0004 44       		.byte	68
 421 0005 00       		.byte	0
 422 0006 43       		.byte	67
 423 0007 00       		.byte	0
 424 0008 20       		.byte	32
 425 0009 00       		.byte	0
 426 000a 49       		.byte	73
 427 000b 00       		.byte	0
 428 000c 6E       		.byte	110
 429 000d 00       		.byte	0
 430 000e 74       		.byte	116
 431 000f 00       		.byte	0
 432 0010 65       		.byte	101
 433 0011 00       		.byte	0
 434 0012 72       		.byte	114
 435 0013 00       		.byte	0
 436 0014 66       		.byte	102
 437 0015 00       		.byte	0
 438 0016 61       		.byte	97
 439 0017 00       		.byte	0
 440 0018 63       		.byte	99
 441 0019 00       		.byte	0
 442 001a 65       		.byte	101
 443 001b 00       		.byte	0
 444 001c 00000000 		.section	.rodata
 445              		.align	2
 446              	.LC0:
 447 0000 5345545F 		.ascii	"SET_SS_DEVICE_DESCR\000"
 447      53535F44 
 447      45564943 
 447      455F4445 
 447      53435200 
 448              		.align	2
 449              	.LC1:
 450 0014 5345545F 		.ascii	"SET_HS_DEVICE_DESCR\000"
 450      48535F44 
 450      45564943 
 450      455F4445 
 450      53435200 
 451              		.align	2
 452              	.LC2:
 453 0028 5345545F 		.ascii	"SET_SS_BOS_DESCR\000"
 453      53535F42 
 453      4F535F44 
 453      45534352 
 453      00
 454 0039 000000   		.align	2
 455              	.LC3:
 456 003c 5345545F 		.ascii	"SET_DEVQUAL_DESCR\000"
 456      44455651 
 456      55414C5F 
 456      44455343 
 456      5200
 457 004e 0000     		.align	2
 458              	.LC4:
 459 0050 5345545F 		.ascii	"SET_SS_CONFIG_DESCR\000"
 459      53535F43 
 459      4F4E4649 
 459      475F4445 
 459      53435200 
 460              		.align	2
 461              	.LC5:
 462 0064 5345545F 		.ascii	"SET_HS_CONFIG_DESCR\000"
 462      48535F43 
 462      4F4E4649 
 462      475F4445 
 462      53435200 
 463              		.align	2
 464              	.LC6:
 465 0078 5345545F 		.ascii	"SET_FS_CONFIG_DESCR\000"
 465      46535F43 
 465      4F4E4649 
 465      475F4445 
 465      53435200 
 466              		.align	2
 467              	.LC7:
 468 008c 5345545F 		.ascii	"SET_STRING0_DESCR\000"
 468      53545249 
 468      4E47305F 
 468      44455343 
 468      5200
 469 009e 0000     		.align	2
 470              	.LC8:
 471 00a0 5345545F 		.ascii	"SET_STRING1_DESCR\000"
 471      53545249 
 471      4E47315F 
 471      44455343 
 471      5200
 472 00b2 0000     		.align	2
 473              	.LC9:
 474 00b4 5345545F 		.ascii	"SET_STRING2_DESCR\000"
 474      53545249 
 474      4E47325F 
 474      44455343 
 474      5200
 475 00c6 0000     		.section	.text.SetUSBdescriptors,"ax",%progbits
 476              		.align	2
 477              		.global	SetUSBdescriptors
 479              	SetUSBdescriptors:
 480              	.LFB0:
 481              		.file 1 "../USB_Descriptors.c"
   1:../USB_Descriptors.c **** /*
   2:../USB_Descriptors.c ****  * CDC_Descriptors
   3:../USB_Descriptors.c ****  *
   4:../USB_Descriptors.c ****  *      Author: john@USB-By-Example.com
   5:../USB_Descriptors.c ****  */
   6:../USB_Descriptors.c **** 
   7:../USB_Descriptors.c **** 
   8:../USB_Descriptors.c **** #include "Application.h"
   9:../USB_Descriptors.c **** 
  10:../USB_Descriptors.c **** extern void CheckStatus(char* StringPtr, CyU3PReturnStatus_t Status);
  11:../USB_Descriptors.c **** 
  12:../USB_Descriptors.c **** // This uses my VID = 0x4242 - use is permitted for development but NOT as a product
  13:../USB_Descriptors.c **** 
  14:../USB_Descriptors.c **** /* Standard device descriptor for USB 3.0 */
  15:../USB_Descriptors.c **** const uint8_t CyFxUSB30DeviceDscr[] __attribute__ ((aligned (32))) =
  16:../USB_Descriptors.c **** {
  17:../USB_Descriptors.c ****     0x12,                           /* Descriptor size */
  18:../USB_Descriptors.c ****     CY_U3P_USB_DEVICE_DESCR,        /* Device descriptor type */
  19:../USB_Descriptors.c ****     0x00,0x03,                      /* USB 3.0 */
  20:../USB_Descriptors.c ****     0x02,                           /* Device class */
  21:../USB_Descriptors.c ****     0x00,                           /* Device sub-class */
  22:../USB_Descriptors.c ****     0x00,                           /* Device protocol */
  23:../USB_Descriptors.c ****     0x09,                           /* Maxpacket size for EP0 */
  24:../USB_Descriptors.c ****     0x42,0x42,                      /* Vendor ID */
  25:../USB_Descriptors.c ****     0x03,0xEC,                      /* Product ID */
  26:../USB_Descriptors.c ****     0x00,0x00,                      /* Device release number */
  27:../USB_Descriptors.c ****     0x01,                           /* Manufacture string index */
  28:../USB_Descriptors.c ****     0x02,                           /* Product string index */
  29:../USB_Descriptors.c ****     0x00,                           /* Serial number string index */
  30:../USB_Descriptors.c ****     0x01                            /* Number of configurations */
  31:../USB_Descriptors.c **** };
  32:../USB_Descriptors.c **** 
  33:../USB_Descriptors.c **** /* Standard device descriptor for USB 2.0 */
  34:../USB_Descriptors.c **** const uint8_t CyFxUSB20DeviceDscr[] __attribute__ ((aligned (32))) =
  35:../USB_Descriptors.c **** {
  36:../USB_Descriptors.c ****     0x12,                           /* Descriptor size */
  37:../USB_Descriptors.c ****     CY_U3P_USB_DEVICE_DESCR,        /* Device descriptor type */
  38:../USB_Descriptors.c ****     0x10,0x02,                      /* USB 2.10 */
  39:../USB_Descriptors.c ****     0x02,                           /* Device class */
  40:../USB_Descriptors.c ****     0x00,                           /* Device sub-class */
  41:../USB_Descriptors.c ****     0x00,                           /* Device protocol */
  42:../USB_Descriptors.c ****     0x40,                           /* Maxpacket size for EP0  */
  43:../USB_Descriptors.c ****     0x42,0x42,                      /* Vendor ID */
  44:../USB_Descriptors.c ****     0x03,0xEC,                      /* Product ID */
  45:../USB_Descriptors.c ****     0x00,0x00,                      /* Device release number */
  46:../USB_Descriptors.c ****     0x01,                           /* Manufacture string index */
  47:../USB_Descriptors.c ****     0x02,                           /* Product string index */
  48:../USB_Descriptors.c ****     0x00,                           /* Serial number string index */
  49:../USB_Descriptors.c ****     0x01                            /* Number of configurations */
  50:../USB_Descriptors.c **** };
  51:../USB_Descriptors.c **** 
  52:../USB_Descriptors.c **** 
  53:../USB_Descriptors.c **** /* Binary device object store descriptor */
  54:../USB_Descriptors.c **** const uint8_t CyFxUSBBOSDscr[] __attribute__ ((aligned (32))) =
  55:../USB_Descriptors.c **** {
  56:../USB_Descriptors.c ****     0x05,                           /* Descriptor size */
  57:../USB_Descriptors.c ****     CY_FX_BOS_DSCR_TYPE,            /* BOS descriptor type */
  58:../USB_Descriptors.c ****     0x16,0x00,                      /* Length of this descriptor and all sub descriptors */
  59:../USB_Descriptors.c ****     0x02,                           /* Number of device capability descriptors */
  60:../USB_Descriptors.c **** 
  61:../USB_Descriptors.c ****     /* USB 2.0 extension */
  62:../USB_Descriptors.c ****     0x07,                           /* Descriptor size */
  63:../USB_Descriptors.c ****     CY_U3P_DEVICE_CAPB_DESCR,       /* Device capability type descriptor */
  64:../USB_Descriptors.c ****     CY_U3P_USB2_EXTN_CAPB_TYPE,      /* USB 2.0 extension capability type */
  65:../USB_Descriptors.c ****     0x02,0x00,0x00,0x00,            /* Supported device level features: LPM support  */
  66:../USB_Descriptors.c **** 
  67:../USB_Descriptors.c ****     /* SuperSpeed device capability */
  68:../USB_Descriptors.c ****     0x0A,                           /* Descriptor size */
  69:../USB_Descriptors.c ****     CY_U3P_DEVICE_CAPB_DESCR,       /* Device capability type descriptor */
  70:../USB_Descriptors.c ****     CY_U3P_SS_USB_CAPB_TYPE,         /* SuperSpeed device capability type */
  71:../USB_Descriptors.c ****     0x00,                           /* Supported device level features  */
  72:../USB_Descriptors.c ****     0x0E,0x00,                      /* Speeds supported by the device : SS, HS and FS */
  73:../USB_Descriptors.c ****     0x03,                           /* Functionality support */
  74:../USB_Descriptors.c ****     0x00,                           /* U1 Device Exit latency */
  75:../USB_Descriptors.c ****     0x00,0x00                       /* U2 Device Exit latency */
  76:../USB_Descriptors.c **** };
  77:../USB_Descriptors.c **** 
  78:../USB_Descriptors.c **** 
  79:../USB_Descriptors.c **** 
  80:../USB_Descriptors.c **** /* Standard device qualifier descriptor */
  81:../USB_Descriptors.c **** const uint8_t CyFxUSBDeviceQualDscr[] __attribute__ ((aligned (32))) =
  82:../USB_Descriptors.c **** {
  83:../USB_Descriptors.c ****     0x0A,                           /* Descriptor size */
  84:../USB_Descriptors.c ****     CY_U3P_USB_DEVQUAL_DESCR,       /* Device qualifier descriptor type */
  85:../USB_Descriptors.c ****     0x00,0x02,                      /* USB 2.0 */
  86:../USB_Descriptors.c ****     0x02,                           /* Device class */
  87:../USB_Descriptors.c ****     0x00,                           /* Device sub-class */
  88:../USB_Descriptors.c ****     0x00,                           /* Device protocol */
  89:../USB_Descriptors.c ****     0x08,                           /* Maxpacket size for EP0 */
  90:../USB_Descriptors.c ****     0x01,                           /* Number of configurations */
  91:../USB_Descriptors.c ****     0x00                            /* Reserved */
  92:../USB_Descriptors.c **** };
  93:../USB_Descriptors.c **** 
  94:../USB_Descriptors.c **** /* Standard super speed configuration descriptor */
  95:../USB_Descriptors.c **** const uint8_t CyFxUSBSSConfigDscr[] __attribute__ ((aligned (32))) =
  96:../USB_Descriptors.c **** {
  97:../USB_Descriptors.c ****     /* Configuration descriptor */
  98:../USB_Descriptors.c ****     0x09,                           /* Descriptor size */
  99:../USB_Descriptors.c ****     CY_U3P_USB_CONFIG_DESCR,        /* Configuration descriptor type */
 100:../USB_Descriptors.c ****     0x55,0x00,                      /* Length of this descriptor and all sub descriptors */
 101:../USB_Descriptors.c ****     0x02,                           /* Number of interfaces */
 102:../USB_Descriptors.c ****     0x01,                           /* Configuration number */
 103:../USB_Descriptors.c ****     0x03,                           /* COnfiguration string index */
 104:../USB_Descriptors.c ****     0x80,                           /* Config characteristics - bus powered */
 105:../USB_Descriptors.c ****     0x19,                           /* Max power consumption of device (in 8mA unit) : 200mA */
 106:../USB_Descriptors.c **** 
 107:../USB_Descriptors.c ****     /* Communication Interface descriptor */
 108:../USB_Descriptors.c ****     0x09,                           /* Descriptor size */
 109:../USB_Descriptors.c ****     CY_U3P_USB_INTRFC_DESCR,        /* Interface Descriptor type */
 110:../USB_Descriptors.c ****     0x00,                           /* Interface number */
 111:../USB_Descriptors.c ****     0x00,                           /* Alternate setting number */
 112:../USB_Descriptors.c ****     0x01,                           /* Number of endpoints */
 113:../USB_Descriptors.c ****     0x02,                           /* Interface class : Communication interface */
 114:../USB_Descriptors.c ****     0x02,                           /* Interface sub class */
 115:../USB_Descriptors.c ****     0x01,                           /* Interface protocol code */
 116:../USB_Descriptors.c ****     0x00,                           /* Interface descriptor string index */
 117:../USB_Descriptors.c **** 
 118:../USB_Descriptors.c ****     /* CDC Class-specific Descriptors */
 119:../USB_Descriptors.c ****     /* Header functional Descriptor */
 120:../USB_Descriptors.c ****     0x05,                           /* Descriptors length(5) */
 121:../USB_Descriptors.c ****     0x24,                           /* Descriptor type : CS_Interface */
 122:../USB_Descriptors.c ****     0x00,                           /* DescriptorSubType : Header Functional Descriptor */
 123:../USB_Descriptors.c ****     0x10,0x01,                      /* bcdCDC : CDC Release Number */
 124:../USB_Descriptors.c **** 
 125:../USB_Descriptors.c ****     /* Abstract Control Management Functional Descriptor */
 126:../USB_Descriptors.c ****     0x04,                           /* Descriptors Length (4) */
 127:../USB_Descriptors.c ****     0x24,                           /* bDescriptorType: CS_INTERFACE */
 128:../USB_Descriptors.c ****     0x02,                           /* bDescriptorSubType: Abstract Control Model Functional Descri
 129:../USB_Descriptors.c ****     0x02,                           /* bmCapabilities: Supports the request combination of Set_Line
 130:../USB_Descriptors.c ****                                        Set_Control_Line_State, Get_Line_Coding and the notification
 131:../USB_Descriptors.c **** 
 132:../USB_Descriptors.c ****     /* Union Functional Descriptor */
 133:../USB_Descriptors.c ****     0x05,                           /* Descriptors Length (5) */
 134:../USB_Descriptors.c ****     0x24,                           /* bDescriptorType: CS_INTERFACE */
 135:../USB_Descriptors.c ****     0x06,                           /* bDescriptorSubType: Union Functional Descriptor */
 136:../USB_Descriptors.c ****     0x00,                           /* bMasterInterface */
 137:../USB_Descriptors.c ****     0x01,                           /* bSlaveInterface */
 138:../USB_Descriptors.c **** 
 139:../USB_Descriptors.c ****     /* Call Management Functional Descriptor */
 140:../USB_Descriptors.c ****     0x05,                           /*  Descriptors Length (5) */
 141:../USB_Descriptors.c ****     0x24,                           /*  bDescriptorType: CS_INTERFACE */
 142:../USB_Descriptors.c ****     0x01,                           /*  bDescriptorSubType: Call Management Functional Descriptor *
 143:../USB_Descriptors.c ****     0x00,                           /*  bmCapabilities: Device sends/receives call management infor
 144:../USB_Descriptors.c ****                                         only over the Communication Class Interface. */
 145:../USB_Descriptors.c ****     0x01,                           /*  Interface Number of Data Class interface */
 146:../USB_Descriptors.c **** 
 147:../USB_Descriptors.c ****     /* Endpoint Descriptor(Interrupt) */
 148:../USB_Descriptors.c ****     0x07,                           /* Descriptor size */
 149:../USB_Descriptors.c ****     CY_U3P_USB_ENDPNT_DESCR,        /* Endpoint descriptor type */
 150:../USB_Descriptors.c ****     CY_FX_EP_INTERRUPT,             /* Endpoint address and description */
 151:../USB_Descriptors.c ****     CY_U3P_USB_EP_INTR,             /* Interrupt endpoint type */
 152:../USB_Descriptors.c ****     0x40,0x00,                      /* Max packet size = 1024 bytes */
 153:../USB_Descriptors.c ****     0x02,                           /* Servicing interval for data transfers */
 154:../USB_Descriptors.c **** 
 155:../USB_Descriptors.c ****     /* Super speed endpoint companion descriptor for interrupt endpoint */
 156:../USB_Descriptors.c ****     0x06,                           /* Descriptor size */
 157:../USB_Descriptors.c ****     CY_U3P_SS_EP_COMPN_DESCR,       /* SS endpoint companion descriptor type */
 158:../USB_Descriptors.c ****     0x00,                           /* Max no. of packets in a Burst : 1 */
 159:../USB_Descriptors.c ****     0x00,                           /* Mult.: Max number of packets : 1 */
 160:../USB_Descriptors.c ****     0x40,0x00,                      /* Bytes per interval : 1024 */
 161:../USB_Descriptors.c **** 
 162:../USB_Descriptors.c ****     /* Data Interface Descriptor */
 163:../USB_Descriptors.c ****     0x09,                           /* Descriptor size */
 164:../USB_Descriptors.c ****     CY_U3P_USB_INTRFC_DESCR,        /* Interface Descriptor type */
 165:../USB_Descriptors.c ****     0x01,                           /* Interface number */
 166:../USB_Descriptors.c ****     0x00,                           /* Alternate setting number */
 167:../USB_Descriptors.c ****     0x02,                           /* Number of endpoints */
 168:../USB_Descriptors.c ****     0x0A,                           /* Interface class: Data interface */
 169:../USB_Descriptors.c ****     0x00,                           /* Interface sub class */
 170:../USB_Descriptors.c ****     0x00,                           /* Interface protocol code */
 171:../USB_Descriptors.c ****     0x00,                           /* Interface descriptor string index */
 172:../USB_Descriptors.c **** 
 173:../USB_Descriptors.c ****     /* Endpoint Descriptor(BULK-PRODUCER) */
 174:../USB_Descriptors.c ****     0x07,                           /* Descriptor size */
 175:../USB_Descriptors.c ****     CY_U3P_USB_ENDPNT_DESCR,        /* Endpoint descriptor type */
 176:../USB_Descriptors.c ****     0x02,                           /* Endpoint address and description */
 177:../USB_Descriptors.c ****     CY_U3P_USB_EP_BULK,             /* BULK endpoint type */
 178:../USB_Descriptors.c ****     0x00,0x04,                      /* Max packet size = 1024 bytes */
 179:../USB_Descriptors.c ****     0x00,                           /* Servicing interval for data transfers */
 180:../USB_Descriptors.c **** 
 181:../USB_Descriptors.c ****     /* Super speed endpoint companion descriptor for producer ep */
 182:../USB_Descriptors.c ****     0x06,                           /* Descriptor size */
 183:../USB_Descriptors.c ****     CY_U3P_SS_EP_COMPN_DESCR,       /* SS endpoint companion descriptor type */
 184:../USB_Descriptors.c ****     0x00,                           /* Max no. of packets in a burst : 1 */
 185:../USB_Descriptors.c ****     0x00,                           /* Mult.: Max number of packets : 1 */
 186:../USB_Descriptors.c ****     0x00,0x04,                      /* Bytes per interval : 1024 */
 187:../USB_Descriptors.c **** 
 188:../USB_Descriptors.c ****     /* Endpoint Descriptor(BULK- CONSUMER) */
 189:../USB_Descriptors.c ****     0x07,                           /* Descriptor size */
 190:../USB_Descriptors.c ****     CY_U3P_USB_ENDPNT_DESCR,        /* Endpoint descriptor type */
 191:../USB_Descriptors.c ****     0x82,                           /* Endpoint address and description */
 192:../USB_Descriptors.c ****     CY_U3P_USB_EP_BULK,             /* BULK endpoint type */
 193:../USB_Descriptors.c ****     0x00,0x04,                      /* Max packet size = 1024 bytes */
 194:../USB_Descriptors.c ****     0x00,                           /* Servicing interval for data transfers */
 195:../USB_Descriptors.c **** 
 196:../USB_Descriptors.c ****     /* Super speed endpoint companion descriptor for consumer ep */
 197:../USB_Descriptors.c ****     0x06,                           /* Descriptor size */
 198:../USB_Descriptors.c ****     CY_U3P_SS_EP_COMPN_DESCR,       /* SS endpoint companion descriptor type */
 199:../USB_Descriptors.c ****     0x00,                           /* Max no. of packets in a burst : 1 */
 200:../USB_Descriptors.c ****     0x00,                           /* Mult.: Max number of packets : 1 */
 201:../USB_Descriptors.c ****     0x00,0x04,                      /* Bytes per interval : 1024 */
 202:../USB_Descriptors.c **** };
 203:../USB_Descriptors.c **** 
 204:../USB_Descriptors.c **** /* Standard high speed configuration descriptor */
 205:../USB_Descriptors.c **** const uint8_t CyFxUSBHSConfigDscr[] __attribute__ ((aligned (32))) =
 206:../USB_Descriptors.c **** {
 207:../USB_Descriptors.c ****     /* Configuration descriptor */
 208:../USB_Descriptors.c ****     0x09,                           /* Descriptor size */
 209:../USB_Descriptors.c ****     CY_U3P_USB_CONFIG_DESCR,        /* Configuration descriptor type */
 210:../USB_Descriptors.c ****     0x43,0x00,                      /* Length of this descriptor and all sub descriptors */
 211:../USB_Descriptors.c ****     0x02,                           /* Number of interfaces */
 212:../USB_Descriptors.c ****     0x01,                           /* Configuration number */
 213:../USB_Descriptors.c ****     0x03,                           /* COnfiguration string index */
 214:../USB_Descriptors.c ****     0x80,                           /* Config characteristics - bus powered */
 215:../USB_Descriptors.c ****     0x64,                           /* Max power consumption of device (in 2mA unit) : 200mA */
 216:../USB_Descriptors.c **** 
 217:../USB_Descriptors.c ****     /* Communication Interface descriptor */
 218:../USB_Descriptors.c ****     0x09,                           /* Descriptor size */
 219:../USB_Descriptors.c ****     CY_U3P_USB_INTRFC_DESCR,        /* Interface Descriptor type */
 220:../USB_Descriptors.c ****     0x00,                           /* Interface number */
 221:../USB_Descriptors.c ****     0x00,                           /* Alternate setting number */
 222:../USB_Descriptors.c ****     0x01,                           /* Number of endpoints */
 223:../USB_Descriptors.c ****     0x02,                           /* Interface class : Communication Interface */
 224:../USB_Descriptors.c ****     0x02,                           /* Interface sub class */
 225:../USB_Descriptors.c ****     0x01,                           /* Interface protocol code */
 226:../USB_Descriptors.c ****     0x00,                           /* Interface descriptor string index */
 227:../USB_Descriptors.c **** 
 228:../USB_Descriptors.c ****     /* CDC Class-specific Descriptors */
 229:../USB_Descriptors.c ****     /* Header functional Descriptor */
 230:../USB_Descriptors.c ****     0x05,                           /* Descriptors length(5) */
 231:../USB_Descriptors.c ****     0x24,                           /* Descriptor type : CS_Interface */
 232:../USB_Descriptors.c ****     0x00,                           /* DescriptorSubType : Header Functional Descriptor */
 233:../USB_Descriptors.c ****     0x10,0x01,                      /* bcdCDC : CDC Release Number */
 234:../USB_Descriptors.c **** 
 235:../USB_Descriptors.c ****     /* Abstract Control Management Functional Descriptor */
 236:../USB_Descriptors.c ****     0x04,                           /* Descriptors Length (4) */
 237:../USB_Descriptors.c ****     0x24,                           /* bDescriptorType: CS_INTERFACE */
 238:../USB_Descriptors.c ****     0x02,                           /* bDescriptorSubType: Abstract Control Model Functional Descri
 239:../USB_Descriptors.c ****     0x02,                           /* bmCapabilities: Supports the request combination of Set_Line
 240:../USB_Descriptors.c ****                                        Set_Control_Line_State, Get_Line_Coding and the notification
 241:../USB_Descriptors.c **** 
 242:../USB_Descriptors.c ****     /* Union Functional Descriptor */
 243:../USB_Descriptors.c ****     0x05,                           /* Descriptors Length (5) */
 244:../USB_Descriptors.c ****     0x24,                           /* bDescriptorType: CS_INTERFACE */
 245:../USB_Descriptors.c ****     0x06,                           /* bDescriptorSubType: Union Functional Descriptor */
 246:../USB_Descriptors.c ****     0x00,                           /* bMasterInterface */
 247:../USB_Descriptors.c ****     0x01,                           /* bSlaveInterface */
 248:../USB_Descriptors.c **** 
 249:../USB_Descriptors.c ****     /* Call Management Functional Descriptor */
 250:../USB_Descriptors.c ****     0x05,                           /*  Descriptors Length (5) */
 251:../USB_Descriptors.c ****     0x24,                           /*  bDescriptorType: CS_INTERFACE */
 252:../USB_Descriptors.c ****     0x01,                           /*  bDescriptorSubType: Call Management Functional Descriptor *
 253:../USB_Descriptors.c ****     0x00,                           /*  bmCapabilities: Device sends/receives call management infor
 254:../USB_Descriptors.c ****                                         only over the Communication Class Interface. */
 255:../USB_Descriptors.c ****     0x01,                           /*  Interface Number of Data Class interface */
 256:../USB_Descriptors.c **** 
 257:../USB_Descriptors.c ****     /* Endpoint Descriptor(Interrupt) */
 258:../USB_Descriptors.c ****     0x07,                           /* Descriptor size */
 259:../USB_Descriptors.c ****     CY_U3P_USB_ENDPNT_DESCR,        /* Endpoint descriptor type */
 260:../USB_Descriptors.c ****     0x81,                           /* Endpoint address and description */
 261:../USB_Descriptors.c ****     CY_U3P_USB_EP_INTR,             /* Interrupt endpoint type */
 262:../USB_Descriptors.c ****     0x40,0x00,                      /* Max packet size = 64 bytes */
 263:../USB_Descriptors.c ****     0x02,                           /* Servicing interval for data transfers */
 264:../USB_Descriptors.c **** 
 265:../USB_Descriptors.c ****     /* Data Interface Descriptor */
 266:../USB_Descriptors.c ****     0x09,                           /* Descriptor size */
 267:../USB_Descriptors.c ****     CY_U3P_USB_INTRFC_DESCR,        /* Interface Descriptor type */
 268:../USB_Descriptors.c ****     0x01,                           /* Interface number */
 269:../USB_Descriptors.c ****     0x00,                           /* Alternate setting number */
 270:../USB_Descriptors.c ****     0x02,                           /* Number of endpoints */
 271:../USB_Descriptors.c ****     0x0A,                           /* Interface class: Data interface */
 272:../USB_Descriptors.c ****     0x00,                           /* Interface sub class */
 273:../USB_Descriptors.c ****     0x00,                           /* Interface protocol code */
 274:../USB_Descriptors.c ****     0x00,                           /* Interface descriptor string index */
 275:../USB_Descriptors.c **** 
 276:../USB_Descriptors.c ****     /* Endpoint Descriptor(BULK-PRODUCER) */
 277:../USB_Descriptors.c ****     0x07,                           /* Descriptor size */
 278:../USB_Descriptors.c ****     CY_U3P_USB_ENDPNT_DESCR,        /* Endpoint descriptor type */
 279:../USB_Descriptors.c ****     0x02,                           /* Endpoint address and description */
 280:../USB_Descriptors.c ****     CY_U3P_USB_EP_BULK,             /* BULK endpoint type */
 281:../USB_Descriptors.c ****     0x00,0x02,                      /* Max packet size = 512 bytes */
 282:../USB_Descriptors.c ****     0x00,                           /* Servicing interval for data transfers */
 283:../USB_Descriptors.c **** 
 284:../USB_Descriptors.c ****     /* Endpoint Descriptor(BULK- CONSUMER) */
 285:../USB_Descriptors.c ****     0x07,                           /* Descriptor size */
 286:../USB_Descriptors.c ****     CY_U3P_USB_ENDPNT_DESCR,        /* Endpoint descriptor type */
 287:../USB_Descriptors.c ****     0x82,                           /* Endpoint address and description */
 288:../USB_Descriptors.c ****     CY_U3P_USB_EP_BULK,             /* Bulk endpoint type */
 289:../USB_Descriptors.c ****     0x00,0x02,                      /* Max packet size = 512 bytes */
 290:../USB_Descriptors.c ****     0x00,                           /* Servicing interval for data transfers */
 291:../USB_Descriptors.c **** };
 292:../USB_Descriptors.c **** 
 293:../USB_Descriptors.c **** /* Standard full speed configuration descriptor */
 294:../USB_Descriptors.c **** const uint8_t CyFxUSBFSConfigDscr[] __attribute__ ((aligned (32))) =
 295:../USB_Descriptors.c **** {
 296:../USB_Descriptors.c ****     /* Configuration descriptor */
 297:../USB_Descriptors.c ****     0x09,                           /* Descriptor size */
 298:../USB_Descriptors.c ****     CY_U3P_USB_CONFIG_DESCR,        /* Configuration descriptor type */
 299:../USB_Descriptors.c ****     0x43,0x00,                      /* Length of this descriptor and all sub descriptors */
 300:../USB_Descriptors.c ****     0x02,                           /* Number of interfaces */
 301:../USB_Descriptors.c ****     0x01,                           /* Configuration number */
 302:../USB_Descriptors.c ****     0x03,                           /* COnfiguration string index */
 303:../USB_Descriptors.c ****     0x80,                           /* Config characteristics - bus powered */
 304:../USB_Descriptors.c ****     0x64,                           /* Max power consumption of device (in 2mA unit) : 200mA */
 305:../USB_Descriptors.c **** 
 306:../USB_Descriptors.c ****     /* Communication Interface descriptor */
 307:../USB_Descriptors.c ****     0x09,                           /* Descriptor size */
 308:../USB_Descriptors.c ****     CY_U3P_USB_INTRFC_DESCR,        /* Interface Descriptor type */
 309:../USB_Descriptors.c ****     0x00,                           /* Interface number */
 310:../USB_Descriptors.c ****     0x00,                           /* Alternate setting number */
 311:../USB_Descriptors.c ****     0x01,                           /* Number of endpoints */
 312:../USB_Descriptors.c ****     0x02,                           /* Interface class: Communication interface*/
 313:../USB_Descriptors.c ****     0x02,                           /* Interface sub class */
 314:../USB_Descriptors.c ****     0x01,                           /* Interface protocol code */
 315:../USB_Descriptors.c ****     0x00,                           /* Interface descriptor string index */
 316:../USB_Descriptors.c **** 
 317:../USB_Descriptors.c ****     /* CDC Class-specific Descriptors */
 318:../USB_Descriptors.c ****     /* Header functional Descriptor */
 319:../USB_Descriptors.c ****     0x05,                           /* Descriptors length(5) */
 320:../USB_Descriptors.c ****     0x24,                           /* Descriptor type : CS_Interface */
 321:../USB_Descriptors.c ****     0x00,                           /* DescriptorSubType : Header Functional Descriptor */
 322:../USB_Descriptors.c ****     0x10,0x01,                      /* bcdCDC : CDC Release Number */
 323:../USB_Descriptors.c **** 
 324:../USB_Descriptors.c ****     /* Abstract Control Management Functional Descriptor */
 325:../USB_Descriptors.c ****     0x04,                           /* Descriptors Length (4) */
 326:../USB_Descriptors.c ****     0x24,                           /* bDescriptorType: CS_INTERFACE */
 327:../USB_Descriptors.c ****     0x02,                           /* bDescriptorSubType: Abstract Control Model Functional Descri
 328:../USB_Descriptors.c ****     0x02,                           /* bmCapabilities: Supports the request combination of Set_Line
 329:../USB_Descriptors.c ****                                        Set_Control_Line_State, Get_Line_Coding and the notification
 330:../USB_Descriptors.c **** 
 331:../USB_Descriptors.c ****     /* Union Functional Descriptor */
 332:../USB_Descriptors.c ****     0x05,                           /* Descriptors Length (5) */
 333:../USB_Descriptors.c ****     0x24,                           /* bDescriptorType: CS_INTERFACE */
 334:../USB_Descriptors.c ****     0x06,                           /* bDescriptorSubType: Union Functional Descriptor */
 335:../USB_Descriptors.c ****     0x00,                           /* bMasterInterface */
 336:../USB_Descriptors.c ****     0x01,                           /* bSlaveInterface */
 337:../USB_Descriptors.c **** 
 338:../USB_Descriptors.c ****     /* Call Management Functional Descriptor */
 339:../USB_Descriptors.c ****     0x05,                           /*  Descriptors Length (5) */
 340:../USB_Descriptors.c ****     0x24,                           /*  bDescriptorType: CS_INTERFACE */
 341:../USB_Descriptors.c ****     0x01,                           /*  bDescriptorSubType: Call Management Functional Descriptor *
 342:../USB_Descriptors.c ****     0x00,                           /*  bmCapabilities: Device sends/receives call management infor
 343:../USB_Descriptors.c ****                                         the Communication Class Interface. */
 344:../USB_Descriptors.c ****     0x01,                           /*  Interface Number of Data Class interface */
 345:../USB_Descriptors.c **** 
 346:../USB_Descriptors.c ****     /* Endpoint Descriptor(Interrupt) */
 347:../USB_Descriptors.c ****     0x07,                           /* Descriptor size */
 348:../USB_Descriptors.c ****     CY_U3P_USB_ENDPNT_DESCR,        /* Endpoint descriptor type */
 349:../USB_Descriptors.c ****     0x01,                           /* Endpoint address and description */
 350:../USB_Descriptors.c ****     CY_U3P_USB_EP_INTR,             /* Interrupt endpoint type */
 351:../USB_Descriptors.c ****     0x10,0x00,                      /* Max packet size = 16 bytes */
 352:../USB_Descriptors.c ****     0x02,                           /* Servicing interval for data transfers */
 353:../USB_Descriptors.c **** 
 354:../USB_Descriptors.c ****     /* Data Interface Descriptor */
 355:../USB_Descriptors.c ****     0x09,                           /* Descriptor size */
 356:../USB_Descriptors.c ****     CY_U3P_USB_INTRFC_DESCR,        /* Interface Descriptor type */
 357:../USB_Descriptors.c ****     0x01,                           /* Interface number */
 358:../USB_Descriptors.c ****     0x00,                           /* Alternate setting number */
 359:../USB_Descriptors.c ****     0x02,                           /* Number of endpoints */
 360:../USB_Descriptors.c ****     0x0A,                           /* Interface class: Data interface */
 361:../USB_Descriptors.c ****     0x00,                           /* Interface sub class */
 362:../USB_Descriptors.c ****     0x00,                           /* Interface protocol code */
 363:../USB_Descriptors.c ****     0x00,                           /* Interface descriptor string index */
 364:../USB_Descriptors.c **** 
 365:../USB_Descriptors.c ****     /* Endpoint Descriptor(BULK-PRODUCER) */
 366:../USB_Descriptors.c ****     0x07,                           /* Descriptor size */
 367:../USB_Descriptors.c ****     CY_U3P_USB_ENDPNT_DESCR,        /* Endpoint descriptor type */
 368:../USB_Descriptors.c ****     0x02,                           /* Endpoint address and description */
 369:../USB_Descriptors.c ****     CY_U3P_USB_EP_BULK,             /* BULK endpoint type */
 370:../USB_Descriptors.c ****     0x40,0x00,                      /* Max packet size = 64 bytes */
 371:../USB_Descriptors.c ****     0x00,                           /* Servicing interval for data transfers */
 372:../USB_Descriptors.c **** 
 373:../USB_Descriptors.c ****     /* Endpoint Descriptor(BULK- CONSUMER) */
 374:../USB_Descriptors.c ****     0x07,                           /* Descriptor size */
 375:../USB_Descriptors.c ****     CY_U3P_USB_ENDPNT_DESCR,        /* Endpoint descriptor type */
 376:../USB_Descriptors.c ****     0x82,                           /* Endpoint address and description */
 377:../USB_Descriptors.c ****     CY_U3P_USB_EP_BULK,             /* Bulk endpoint type */
 378:../USB_Descriptors.c ****     0x40,0x00,                      /* Max packet size = 64 bytes */
 379:../USB_Descriptors.c ****     0x00,                           /* Servicing interval for data transfers */
 380:../USB_Descriptors.c **** };
 381:../USB_Descriptors.c **** 
 382:../USB_Descriptors.c **** /* Standard language ID string descriptor */
 383:../USB_Descriptors.c **** const uint8_t CyFxUSBStringLangIDDscr[] __attribute__ ((aligned (32))) =
 384:../USB_Descriptors.c **** {
 385:../USB_Descriptors.c ****     4,                              /* Descriptor size */
 386:../USB_Descriptors.c ****     CY_U3P_USB_STRING_DESCR,        /* Device descriptor type */
 387:../USB_Descriptors.c ****     0x09,0x04                       /* Language ID supported */
 388:../USB_Descriptors.c **** };
 389:../USB_Descriptors.c **** 
 390:../USB_Descriptors.c **** /* Standard manufacturer string descriptor */
 391:../USB_Descriptors.c **** const uint8_t CyFxUSBManufactureDscr[] __attribute__ ((aligned (32))) =
 392:../USB_Descriptors.c **** {
 393:../USB_Descriptors.c ****     44,                             /* Descriptor size */
 394:../USB_Descriptors.c ****     CY_U3P_USB_STRING_DESCR,        /* Device descriptor type */
 395:../USB_Descriptors.c ****     'U',0,'S',0,'B',0,' ',0,'D',0,'e',0,'s',0,'i',0,'g',0,'n',0,' ',0,
 396:../USB_Descriptors.c ****     'B',0,'y',0,' ',0,'E',0,'x',0,'a',0,'m',0,'p',0,'l',0,'e',0
 397:../USB_Descriptors.c **** };
 398:../USB_Descriptors.c **** 
 399:../USB_Descriptors.c **** /* Standard product string descriptor */
 400:../USB_Descriptors.c **** const uint8_t CyFxUSBProductDscr[] __attribute__ ((aligned (32))) =
 401:../USB_Descriptors.c **** {
 402:../USB_Descriptors.c ****     28,                           	/* Descriptor size */
 403:../USB_Descriptors.c ****     CY_U3P_USB_STRING_DESCR,        /* Device descriptor type */
 404:../USB_Descriptors.c ****     'C',0,'D',0,'C',0,' ',0,'I',0,'n',0,'t',0,'e',0,'r',0,'f',0,'a',0,'c',0,'e',0
 405:../USB_Descriptors.c **** };
 406:../USB_Descriptors.c **** 
 407:../USB_Descriptors.c **** CyU3PReturnStatus_t SetUSBdescriptors(void)
 408:../USB_Descriptors.c **** {
 482              		.loc 1 408 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 8
 485              		@ frame_needed = 1, uses_anonymous_args = 0
 486 0000 00482DE9 		stmfd	sp!, {fp, lr}
 487              	.LCFI0:
 488              		.cfi_def_cfa_offset 8
 489 0004 04B08DE2 		add	fp, sp, #4
 490              		.cfi_offset 14, -4
 491              		.cfi_offset 11, -8
 492              	.LCFI1:
 493              		.cfi_def_cfa 11, 4
 494 0008 08D04DE2 		sub	sp, sp, #8
 409:../USB_Descriptors.c **** 	CyU3PReturnStatus_t OverallStatus, Status;
 410:../USB_Descriptors.c **** 	OverallStatus = Status = CyU3PUsbSetDesc(CY_U3P_USB_SET_SS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSB3
 495              		.loc 1 410 0
 496 000c 0000A0E3 		mov	r0, #0
 497 0010 0010A0E3 		mov	r1, #0
 498 0014 D8219FE5 		ldr	r2, .L2
 499 0018 FEFFFFEB 		bl	CyU3PUsbSetDesc
 500 001c 08000BE5 		str	r0, [fp, #-8]
 501 0020 08301BE5 		ldr	r3, [fp, #-8]
 502 0024 0C300BE5 		str	r3, [fp, #-12]
 411:../USB_Descriptors.c ****     CheckStatus("SET_SS_DEVICE_DESCR", Status);
 503              		.loc 1 411 0
 504 0028 C8019FE5 		ldr	r0, .L2+4
 505 002c 08101BE5 		ldr	r1, [fp, #-8]
 506 0030 FEFFFFEB 		bl	CheckStatus
 412:../USB_Descriptors.c ****     OverallStatus |= Status = CyU3PUsbSetDesc(CY_U3P_USB_SET_HS_DEVICE_DESCR, NULL, (uint8_t *)CyFx
 507              		.loc 1 412 0
 508 0034 0100A0E3 		mov	r0, #1
 509 0038 0010A0E3 		mov	r1, #0
 510 003c B8219FE5 		ldr	r2, .L2+8
 511 0040 FEFFFFEB 		bl	CyU3PUsbSetDesc
 512 0044 08000BE5 		str	r0, [fp, #-8]
 513 0048 0C201BE5 		ldr	r2, [fp, #-12]
 514 004c 08301BE5 		ldr	r3, [fp, #-8]
 515 0050 033082E1 		orr	r3, r2, r3
 516 0054 0C300BE5 		str	r3, [fp, #-12]
 413:../USB_Descriptors.c ****     CheckStatus("SET_HS_DEVICE_DESCR", Status);
 517              		.loc 1 413 0
 518 0058 A0019FE5 		ldr	r0, .L2+12
 519 005c 08101BE5 		ldr	r1, [fp, #-8]
 520 0060 FEFFFFEB 		bl	CheckStatus
 414:../USB_Descriptors.c ****     OverallStatus |= Status = CyU3PUsbSetDesc(CY_U3P_USB_SET_SS_BOS_DESCR, NULL, (uint8_t *)CyFxUSB
 521              		.loc 1 414 0
 522 0064 0700A0E3 		mov	r0, #7
 523 0068 0010A0E3 		mov	r1, #0
 524 006c 90219FE5 		ldr	r2, .L2+16
 525 0070 FEFFFFEB 		bl	CyU3PUsbSetDesc
 526 0074 08000BE5 		str	r0, [fp, #-8]
 527 0078 0C201BE5 		ldr	r2, [fp, #-12]
 528 007c 08301BE5 		ldr	r3, [fp, #-8]
 529 0080 033082E1 		orr	r3, r2, r3
 530 0084 0C300BE5 		str	r3, [fp, #-12]
 415:../USB_Descriptors.c ****     CheckStatus("SET_SS_BOS_DESCR", Status);
 531              		.loc 1 415 0
 532 0088 78019FE5 		ldr	r0, .L2+20
 533 008c 08101BE5 		ldr	r1, [fp, #-8]
 534 0090 FEFFFFEB 		bl	CheckStatus
 416:../USB_Descriptors.c ****     OverallStatus |= Status = CyU3PUsbSetDesc(CY_U3P_USB_SET_DEVQUAL_DESCR, NULL, (uint8_t *)CyFxUS
 535              		.loc 1 416 0
 536 0094 0200A0E3 		mov	r0, #2
 537 0098 0010A0E3 		mov	r1, #0
 538 009c 68219FE5 		ldr	r2, .L2+24
 539 00a0 FEFFFFEB 		bl	CyU3PUsbSetDesc
 540 00a4 08000BE5 		str	r0, [fp, #-8]
 541 00a8 0C201BE5 		ldr	r2, [fp, #-12]
 542 00ac 08301BE5 		ldr	r3, [fp, #-8]
 543 00b0 033082E1 		orr	r3, r2, r3
 544 00b4 0C300BE5 		str	r3, [fp, #-12]
 417:../USB_Descriptors.c ****     CheckStatus("SET_DEVQUAL_DESCR", Status);
 545              		.loc 1 417 0
 546 00b8 50019FE5 		ldr	r0, .L2+28
 547 00bc 08101BE5 		ldr	r1, [fp, #-8]
 548 00c0 FEFFFFEB 		bl	CheckStatus
 418:../USB_Descriptors.c ****     OverallStatus |= Status = CyU3PUsbSetDesc(CY_U3P_USB_SET_SS_CONFIG_DESCR, NULL, (uint8_t *)CyFx
 549              		.loc 1 418 0
 550 00c4 0600A0E3 		mov	r0, #6
 551 00c8 0010A0E3 		mov	r1, #0
 552 00cc 40219FE5 		ldr	r2, .L2+32
 553 00d0 FEFFFFEB 		bl	CyU3PUsbSetDesc
 554 00d4 08000BE5 		str	r0, [fp, #-8]
 555 00d8 0C201BE5 		ldr	r2, [fp, #-12]
 556 00dc 08301BE5 		ldr	r3, [fp, #-8]
 557 00e0 033082E1 		orr	r3, r2, r3
 558 00e4 0C300BE5 		str	r3, [fp, #-12]
 419:../USB_Descriptors.c ****     CheckStatus("SET_SS_CONFIG_DESCR", Status);
 559              		.loc 1 419 0
 560 00e8 28019FE5 		ldr	r0, .L2+36
 561 00ec 08101BE5 		ldr	r1, [fp, #-8]
 562 00f0 FEFFFFEB 		bl	CheckStatus
 420:../USB_Descriptors.c ****     OverallStatus |= Status = CyU3PUsbSetDesc(CY_U3P_USB_SET_HS_CONFIG_DESCR, NULL, (uint8_t *)CyFx
 563              		.loc 1 420 0
 564 00f4 0400A0E3 		mov	r0, #4
 565 00f8 0010A0E3 		mov	r1, #0
 566 00fc 18219FE5 		ldr	r2, .L2+40
 567 0100 FEFFFFEB 		bl	CyU3PUsbSetDesc
 568 0104 08000BE5 		str	r0, [fp, #-8]
 569 0108 0C201BE5 		ldr	r2, [fp, #-12]
 570 010c 08301BE5 		ldr	r3, [fp, #-8]
 571 0110 033082E1 		orr	r3, r2, r3
 572 0114 0C300BE5 		str	r3, [fp, #-12]
 421:../USB_Descriptors.c ****     CheckStatus("SET_HS_CONFIG_DESCR", Status);
 573              		.loc 1 421 0
 574 0118 00019FE5 		ldr	r0, .L2+44
 575 011c 08101BE5 		ldr	r1, [fp, #-8]
 576 0120 FEFFFFEB 		bl	CheckStatus
 422:../USB_Descriptors.c ****     OverallStatus |= Status = CyU3PUsbSetDesc(CY_U3P_USB_SET_FS_CONFIG_DESCR, NULL, (uint8_t *)CyFx
 577              		.loc 1 422 0
 578 0124 0300A0E3 		mov	r0, #3
 579 0128 0010A0E3 		mov	r1, #0
 580 012c F0209FE5 		ldr	r2, .L2+48
 581 0130 FEFFFFEB 		bl	CyU3PUsbSetDesc
 582 0134 08000BE5 		str	r0, [fp, #-8]
 583 0138 0C201BE5 		ldr	r2, [fp, #-12]
 584 013c 08301BE5 		ldr	r3, [fp, #-8]
 585 0140 033082E1 		orr	r3, r2, r3
 586 0144 0C300BE5 		str	r3, [fp, #-12]
 423:../USB_Descriptors.c ****     CheckStatus("SET_FS_CONFIG_DESCR", Status);
 587              		.loc 1 423 0
 588 0148 D8009FE5 		ldr	r0, .L2+52
 589 014c 08101BE5 		ldr	r1, [fp, #-8]
 590 0150 FEFFFFEB 		bl	CheckStatus
 424:../USB_Descriptors.c ****     OverallStatus |= Status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 0, (uint8_t *)CyFxUSBStr
 591              		.loc 1 424 0
 592 0154 0500A0E3 		mov	r0, #5
 593 0158 0010A0E3 		mov	r1, #0
 594 015c C8209FE5 		ldr	r2, .L2+56
 595 0160 FEFFFFEB 		bl	CyU3PUsbSetDesc
 596 0164 08000BE5 		str	r0, [fp, #-8]
 597 0168 0C201BE5 		ldr	r2, [fp, #-12]
 598 016c 08301BE5 		ldr	r3, [fp, #-8]
 599 0170 033082E1 		orr	r3, r2, r3
 600 0174 0C300BE5 		str	r3, [fp, #-12]
 425:../USB_Descriptors.c ****     CheckStatus("SET_STRING0_DESCR", Status);
 601              		.loc 1 425 0
 602 0178 B0009FE5 		ldr	r0, .L2+60
 603 017c 08101BE5 		ldr	r1, [fp, #-8]
 604 0180 FEFFFFEB 		bl	CheckStatus
 426:../USB_Descriptors.c ****     OverallStatus |= Status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 1, (uint8_t *)CyFxUSBMan
 605              		.loc 1 426 0
 606 0184 0500A0E3 		mov	r0, #5
 607 0188 0110A0E3 		mov	r1, #1
 608 018c A0209FE5 		ldr	r2, .L2+64
 609 0190 FEFFFFEB 		bl	CyU3PUsbSetDesc
 610 0194 08000BE5 		str	r0, [fp, #-8]
 611 0198 0C201BE5 		ldr	r2, [fp, #-12]
 612 019c 08301BE5 		ldr	r3, [fp, #-8]
 613 01a0 033082E1 		orr	r3, r2, r3
 614 01a4 0C300BE5 		str	r3, [fp, #-12]
 427:../USB_Descriptors.c ****     CheckStatus("SET_STRING1_DESCR", Status);
 615              		.loc 1 427 0
 616 01a8 88009FE5 		ldr	r0, .L2+68
 617 01ac 08101BE5 		ldr	r1, [fp, #-8]
 618 01b0 FEFFFFEB 		bl	CheckStatus
 428:../USB_Descriptors.c ****     OverallStatus |= Status = CyU3PUsbSetDesc(CY_U3P_USB_SET_STRING_DESCR, 2, (uint8_t *)CyFxUSBPro
 619              		.loc 1 428 0
 620 01b4 0500A0E3 		mov	r0, #5
 621 01b8 0210A0E3 		mov	r1, #2
 622 01bc 78209FE5 		ldr	r2, .L2+72
 623 01c0 FEFFFFEB 		bl	CyU3PUsbSetDesc
 624 01c4 08000BE5 		str	r0, [fp, #-8]
 625 01c8 0C201BE5 		ldr	r2, [fp, #-12]
 626 01cc 08301BE5 		ldr	r3, [fp, #-8]
 627 01d0 033082E1 		orr	r3, r2, r3
 628 01d4 0C300BE5 		str	r3, [fp, #-12]
 429:../USB_Descriptors.c ****     CheckStatus("SET_STRING2_DESCR", Status);
 629              		.loc 1 429 0
 630 01d8 60009FE5 		ldr	r0, .L2+76
 631 01dc 08101BE5 		ldr	r1, [fp, #-8]
 632 01e0 FEFFFFEB 		bl	CheckStatus
 430:../USB_Descriptors.c **** 
 431:../USB_Descriptors.c ****     return OverallStatus;
 633              		.loc 1 431 0
 634 01e4 0C301BE5 		ldr	r3, [fp, #-12]
 432:../USB_Descriptors.c **** }
 635              		.loc 1 432 0
 636 01e8 0300A0E1 		mov	r0, r3
 637 01ec 04D04BE2 		sub	sp, fp, #4
 638 01f0 0088BDE8 		ldmfd	sp!, {fp, pc}
 639              	.L3:
 640              		.align	2
 641              	.L2:
 642 01f4 00000000 		.word	CyFxUSB30DeviceDscr
 643 01f8 00000000 		.word	.LC0
 644 01fc 00000000 		.word	CyFxUSB20DeviceDscr
 645 0200 14000000 		.word	.LC1
 646 0204 00000000 		.word	CyFxUSBBOSDscr
 647 0208 28000000 		.word	.LC2
 648 020c 00000000 		.word	CyFxUSBDeviceQualDscr
 649 0210 3C000000 		.word	.LC3
 650 0214 00000000 		.word	CyFxUSBSSConfigDscr
 651 0218 50000000 		.word	.LC4
 652 021c 00000000 		.word	CyFxUSBHSConfigDscr
 653 0220 64000000 		.word	.LC5
 654 0224 00000000 		.word	CyFxUSBFSConfigDscr
 655 0228 78000000 		.word	.LC6
 656 022c 00000000 		.word	CyFxUSBStringLangIDDscr
 657 0230 8C000000 		.word	.LC7
 658 0234 00000000 		.word	CyFxUSBManufactureDscr
 659 0238 A0000000 		.word	.LC8
 660 023c 00000000 		.word	CyFxUSBProductDscr
 661 0240 B4000000 		.word	.LC9
 662              		.cfi_endproc
 663              	.LFE0:
 665              		.text
 666              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 USB_Descriptors.c
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:26     .rodata.CyFxUSB30DeviceDscr:00000000 CyFxUSB30DeviceDscr
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:23     .rodata.CyFxUSB30DeviceDscr:00000000 $d
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:50     .rodata.CyFxUSB20DeviceDscr:00000000 CyFxUSB20DeviceDscr
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:47     .rodata.CyFxUSB20DeviceDscr:00000000 $d
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:74     .rodata.CyFxUSBBOSDscr:00000000 CyFxUSBBOSDscr
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:71     .rodata.CyFxUSBBOSDscr:00000000 $d
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:102    .rodata.CyFxUSBDeviceQualDscr:00000000 CyFxUSBDeviceQualDscr
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:99     .rodata.CyFxUSBDeviceQualDscr:00000000 $d
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:118    .rodata.CyFxUSBSSConfigDscr:00000000 CyFxUSBSSConfigDscr
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:115    .rodata.CyFxUSBSSConfigDscr:00000000 $d
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:209    .rodata.CyFxUSBHSConfigDscr:00000000 CyFxUSBHSConfigDscr
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:206    .rodata.CyFxUSBHSConfigDscr:00000000 $d
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:282    .rodata.CyFxUSBFSConfigDscr:00000000 CyFxUSBFSConfigDscr
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:279    .rodata.CyFxUSBFSConfigDscr:00000000 $d
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:355    .rodata.CyFxUSBStringLangIDDscr:00000000 CyFxUSBStringLangIDDscr
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:352    .rodata.CyFxUSBStringLangIDDscr:00000000 $d
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:365    .rodata.CyFxUSBManufactureDscr:00000000 CyFxUSBManufactureDscr
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:362    .rodata.CyFxUSBManufactureDscr:00000000 $d
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:415    .rodata.CyFxUSBProductDscr:00000000 CyFxUSBProductDscr
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:412    .rodata.CyFxUSBProductDscr:00000000 $d
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:445    .rodata:00000000 $d
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:476    .text.SetUSBdescriptors:00000000 $a
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:479    .text.SetUSBdescriptors:00000000 SetUSBdescriptors
C:\Users\John\AppData\Local\Temp\ccxcoZov.s:642    .text.SetUSBdescriptors:000001f4 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CyU3PUsbSetDesc
CheckStatus
