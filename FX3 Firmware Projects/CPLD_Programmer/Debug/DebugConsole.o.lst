   1              		.cpu arm926ej-s
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"DebugConsole.c"
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.global	glDebugTxEnabled
  22              		.section	.bss.glDebugTxEnabled,"aw",%nobits
  23              		.align	2
  26              	glDebugTxEnabled:
  27 0000 00000000 		.space	4
  28              		.comm	glUARTtoCPU_Handle,160,4
  29              		.comm	glConsoleInBuffer,32,4
  30              		.comm	glConsoleInIndex,4,4
  31              		.section	.rodata
  32              		.align	2
  33              	.LC0:
  34 0000 256300   		.ascii	"%c\000"
  35 0003 00       		.align	2
  36              	.LC1:
  37 0004 0A00     		.ascii	"\012\000"
  38 0006 0000     		.align	2
  39              	.LC2:
  40 0008 73746172 		.ascii	"start\000"
  40      7400
  41 000e 0000     		.align	2
  42              	.LC3:
  43 0010 73746F70 		.ascii	"stop\000"
  43      00
  44 0015 000000   		.align	2
  45              	.LC4:
  46 0018 7365746C 		.ascii	"setled\000"
  46      656400
  47 001f 00       		.align	2
  48              	.LC5:
  49 0020 72657365 		.ascii	"reset\000"
  49      7400
  50 0026 0000     		.align	2
  51              	.LC6:
  52 0028 0A524553 		.ascii	"\012RESETTING CPU\012\000"
  52      45545449 
  52      4E472043 
  52      50550A00 
  53              		.align	2
  54              	.LC7:
  55 0038 0A556E6B 		.ascii	"\012Unknown Command: '%s'\000"
  55      6E6F776E 
  55      20436F6D 
  55      6D616E64 
  55      3A202725 
  56              		.section	.text.UartCallback,"ax",%progbits
  57              		.align	2
  58              		.global	UartCallback
  60              	UartCallback:
  61              	.LFB0:
  62              		.file 1 "../DebugConsole.c"
   1:../DebugConsole.c **** /*
   2:../DebugConsole.c ****  * DebugConsole.c
   3:../DebugConsole.c ****  *
   4:../DebugConsole.c ****  *  Created on: Feb 18, 2014
   5:../DebugConsole.c ****  *      Author: John
   6:../DebugConsole.c ****  */
   7:../DebugConsole.c **** 
   8:../DebugConsole.c **** #include "Application.h"
   9:../DebugConsole.c **** 
  10:../DebugConsole.c **** // Declare external functions
  11:../DebugConsole.c **** extern void CheckStatus(char* StringPtr, CyU3PReturnStatus_t Status);
  12:../DebugConsole.c **** extern void StartApplication(void);
  13:../DebugConsole.c **** extern void StopApplication(void);
  14:../DebugConsole.c **** extern void IndicateError(uint16_t ErrorCode);
  15:../DebugConsole.c **** 
  16:../DebugConsole.c **** CyBool_t glDebugTxEnabled = CyFalse;	// Set true once I can output messages to the Console
  17:../DebugConsole.c **** CyU3PDmaChannel glUARTtoCPU_Handle;		// Handle needed by Uart Callback routine
  18:../DebugConsole.c **** char glConsoleInBuffer[32];				// Buffer for user Console Input
  19:../DebugConsole.c **** uint32_t glConsoleInIndex;				// Index into ConsoleIn buffer
  20:../DebugConsole.c **** 
  21:../DebugConsole.c **** void UartCallback(CyU3PUartEvt_t Event, CyU3PUartError_t Error)
  22:../DebugConsole.c **** // Handle characters typed in by the developer
  23:../DebugConsole.c **** // Look for and execute commands on a <CR>
  24:../DebugConsole.c **** {
  63              		.loc 1 24 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 24
  66              		@ frame_needed = 1, uses_anonymous_args = 0
  67 0000 00482DE9 		stmfd	sp!, {fp, lr}
  68              	.LCFI0:
  69              		.cfi_def_cfa_offset 8
  70 0004 04B08DE2 		add	fp, sp, #4
  71              		.cfi_offset 14, -4
  72              		.cfi_offset 11, -8
  73              	.LCFI1:
  74              		.cfi_def_cfa 11, 4
  75 0008 18D04DE2 		sub	sp, sp, #24
  76 000c 0020A0E1 		mov	r2, r0
  77 0010 0130A0E1 		mov	r3, r1
  78 0014 15204BE5 		strb	r2, [fp, #-21]
  79 0018 16304BE5 		strb	r3, [fp, #-22]
  25:../DebugConsole.c **** 	CyU3PDmaBuffer_t ConsoleInDmaBuffer;
  26:../DebugConsole.c **** 	char InputChar;
  27:../DebugConsole.c **** 	if (Event == CY_U3P_UART_EVENT_RX_DONE)
  80              		.loc 1 27 0
  81 001c 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
  82 0020 000053E3 		cmp	r3, #0
  83 0024 6A00001A 		bne	.L1
  28:../DebugConsole.c ****     {
  29:../DebugConsole.c **** 		CyU3PDmaChannelSetWrapUp(&glUARTtoCPU_Handle);
  84              		.loc 1 29 0
  85 0028 AC019FE5 		ldr	r0, .L11
  86 002c FEFFFFEB 		bl	CyU3PDmaChannelSetWrapUp
  30:../DebugConsole.c **** 		CyU3PDmaChannelGetBuffer(&glUARTtoCPU_Handle, &ConsoleInDmaBuffer, CYU3P_NO_WAIT);
  87              		.loc 1 30 0
  88 0030 14304BE2 		sub	r3, fp, #20
  89 0034 A0019FE5 		ldr	r0, .L11
  90 0038 0310A0E1 		mov	r1, r3
  91 003c 0020A0E3 		mov	r2, #0
  92 0040 FEFFFFEB 		bl	CyU3PDmaChannelGetBuffer
  31:../DebugConsole.c **** 		InputChar = (char)*ConsoleInDmaBuffer.buffer;
  93              		.loc 1 31 0
  94 0044 14301BE5 		ldr	r3, [fp, #-20]
  95 0048 0030D3E5 		ldrb	r3, [r3, #0]
  96 004c 05304BE5 		strb	r3, [fp, #-5]
  32:../DebugConsole.c **** 		CyU3PDebugPrint(4, "%c", InputChar);			// Echo the character
  97              		.loc 1 32 0
  98 0050 05305BE5 		ldrb	r3, [fp, #-5]	@ zero_extendqisi2
  99 0054 0400A0E3 		mov	r0, #4
 100 0058 80119FE5 		ldr	r1, .L11+4
 101 005c 0320A0E1 		mov	r2, r3
 102 0060 FEFFFFEB 		bl	CyU3PDebugPrint
  33:../DebugConsole.c **** 		if (InputChar == 0x0d)
 103              		.loc 1 33 0
 104 0064 05305BE5 		ldrb	r3, [fp, #-5]	@ zero_extendqisi2
 105 0068 0D0053E3 		cmp	r3, #13
 106 006c 3700001A 		bne	.L3
  34:../DebugConsole.c **** 		{
  35:../DebugConsole.c **** 			CyU3PDebugPrint(4, "\n");
 107              		.loc 1 35 0
 108 0070 0400A0E3 		mov	r0, #4
 109 0074 68119FE5 		ldr	r1, .L11+8
 110 0078 FEFFFFEB 		bl	CyU3PDebugPrint
  36:../DebugConsole.c **** 			if (strcmp("start", glConsoleInBuffer) == 0) StartApplication();
 111              		.loc 1 36 0
 112 007c 64019FE5 		ldr	r0, .L11+12
 113 0080 64119FE5 		ldr	r1, .L11+16
 114 0084 FEFFFFEB 		bl	strcmp
 115 0088 0030A0E1 		mov	r3, r0
 116 008c 000053E3 		cmp	r3, #0
 117 0090 0100001A 		bne	.L4
 118              		.loc 1 36 0 is_stmt 0 discriminator 1
 119 0094 FEFFFFEB 		bl	StartApplication
 120 0098 280000EA 		b	.L5
 121              	.L4:
  37:../DebugConsole.c **** 			else if (strcmp("stop", glConsoleInBuffer) == 0) StopApplication();
 122              		.loc 1 37 0 is_stmt 1
 123 009c 4C019FE5 		ldr	r0, .L11+20
 124 00a0 44119FE5 		ldr	r1, .L11+16
 125 00a4 FEFFFFEB 		bl	strcmp
 126 00a8 0030A0E1 		mov	r3, r0
 127 00ac 000053E3 		cmp	r3, #0
 128 00b0 0100001A 		bne	.L6
 129              		.loc 1 37 0 is_stmt 0 discriminator 1
 130 00b4 FEFFFFEB 		bl	StopApplication
 131 00b8 200000EA 		b	.L5
 132              	.L6:
  38:../DebugConsole.c **** 			else if (strncmp("setled", glConsoleInBuffer, 6) == 0) IndicateError(glConsoleInBuffer[6] - '0')
 133              		.loc 1 38 0 is_stmt 1
 134 00bc 30019FE5 		ldr	r0, .L11+24
 135 00c0 24119FE5 		ldr	r1, .L11+16
 136 00c4 0620A0E3 		mov	r2, #6
 137 00c8 FEFFFFEB 		bl	strncmp
 138 00cc 0030A0E1 		mov	r3, r0
 139 00d0 000053E3 		cmp	r3, #0
 140 00d4 0700001A 		bne	.L7
 141              		.loc 1 38 0 is_stmt 0 discriminator 1
 142 00d8 0C319FE5 		ldr	r3, .L11+16
 143 00dc 0630D3E5 		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 144 00e0 303043E2 		sub	r3, r3, #48
 145 00e4 0338A0E1 		mov	r3, r3, asl #16
 146 00e8 2338A0E1 		mov	r3, r3, lsr #16
 147 00ec 0300A0E1 		mov	r0, r3
 148 00f0 FEFFFFEB 		bl	IndicateError
 149 00f4 110000EA 		b	.L5
 150              	.L7:
  39:../DebugConsole.c **** 			else if (strcmp("reset", glConsoleInBuffer) == 0)
 151              		.loc 1 39 0 is_stmt 1
 152 00f8 F8009FE5 		ldr	r0, .L11+28
 153 00fc E8109FE5 		ldr	r1, .L11+16
 154 0100 FEFFFFEB 		bl	strcmp
 155 0104 0030A0E1 		mov	r3, r0
 156 0108 000053E3 		cmp	r3, #0
 157 010c 0700001A 		bne	.L8
  40:../DebugConsole.c **** 			{
  41:../DebugConsole.c **** 				CyU3PDebugPrint(4, "\nRESETTING CPU\n");
 158              		.loc 1 41 0
 159 0110 0400A0E3 		mov	r0, #4
 160 0114 E0109FE5 		ldr	r1, .L11+32
 161 0118 FEFFFFEB 		bl	CyU3PDebugPrint
  42:../DebugConsole.c **** 				CyU3PThreadSleep(100);
 162              		.loc 1 42 0
 163 011c 6400A0E3 		mov	r0, #100
 164 0120 FEFFFFEB 		bl	_tx_thread_sleep
  43:../DebugConsole.c **** 				CyU3PDeviceReset(CyFalse);
 165              		.loc 1 43 0
 166 0124 0000A0E3 		mov	r0, #0
 167 0128 FEFFFFEB 		bl	CyU3PDeviceReset
 168 012c 030000EA 		b	.L5
 169              	.L8:
  44:../DebugConsole.c **** 			}
  45:../DebugConsole.c **** 			else CyU3PDebugPrint(4, "\nUnknown Command: '%s'", &glConsoleInBuffer[0]);
 170              		.loc 1 45 0
 171 0130 0400A0E3 		mov	r0, #4
 172 0134 C4109FE5 		ldr	r1, .L11+36
 173 0138 AC209FE5 		ldr	r2, .L11+16
 174 013c FEFFFFEB 		bl	CyU3PDebugPrint
 175              	.L5:
  46:../DebugConsole.c **** 			glConsoleInIndex = 0;
 176              		.loc 1 46 0
 177 0140 BC309FE5 		ldr	r3, .L11+40
 178 0144 0020A0E3 		mov	r2, #0
 179 0148 002083E5 		str	r2, [r3, #0]
 180 014c 1C0000EA 		b	.L9
 181              	.L3:
  47:../DebugConsole.c **** 		}
  48:../DebugConsole.c **** 		else
  49:../DebugConsole.c **** 		{
  50:../DebugConsole.c **** 			glConsoleInBuffer[glConsoleInIndex] = InputChar | 0x20;		// Force lower case
 182              		.loc 1 50 0
 183 0150 AC309FE5 		ldr	r3, .L11+40
 184 0154 003093E5 		ldr	r3, [r3, #0]
 185 0158 05205BE5 		ldrb	r2, [fp, #-5]
 186 015c 202082E3 		orr	r2, r2, #32
 187 0160 FF1002E2 		and	r1, r2, #255
 188 0164 80209FE5 		ldr	r2, .L11+16
 189 0168 0310C2E7 		strb	r1, [r2, r3]
  51:../DebugConsole.c **** 			if (glConsoleInIndex++ < sizeof(glConsoleInBuffer)) glConsoleInBuffer[glConsoleInIndex] = 0;
 190              		.loc 1 51 0
 191 016c 90309FE5 		ldr	r3, .L11+40
 192 0170 003093E5 		ldr	r3, [r3, #0]
 193 0174 1F0053E3 		cmp	r3, #31
 194 0178 0020A083 		movhi	r2, #0
 195 017c 0120A093 		movls	r2, #1
 196 0180 FF2002E2 		and	r2, r2, #255
 197 0184 011083E2 		add	r1, r3, #1
 198 0188 74309FE5 		ldr	r3, .L11+40
 199 018c 001083E5 		str	r1, [r3, #0]
 200 0190 000052E3 		cmp	r2, #0
 201 0194 0500000A 		beq	.L10
 202              		.loc 1 51 0 is_stmt 0 discriminator 1
 203 0198 64309FE5 		ldr	r3, .L11+40
 204 019c 003093E5 		ldr	r3, [r3, #0]
 205 01a0 44209FE5 		ldr	r2, .L11+16
 206 01a4 0010A0E3 		mov	r1, #0
 207 01a8 0310C2E7 		strb	r1, [r2, r3]
 208 01ac 040000EA 		b	.L9
 209              	.L10:
  52:../DebugConsole.c **** 			else glConsoleInIndex--;
 210              		.loc 1 52 0 is_stmt 1
 211 01b0 4C309FE5 		ldr	r3, .L11+40
 212 01b4 003093E5 		ldr	r3, [r3, #0]
 213 01b8 012043E2 		sub	r2, r3, #1
 214 01bc 40309FE5 		ldr	r3, .L11+40
 215 01c0 002083E5 		str	r2, [r3, #0]
 216              	.L9:
  53:../DebugConsole.c **** 		}
  54:../DebugConsole.c **** 		CyU3PDmaChannelDiscardBuffer(&glUARTtoCPU_Handle);
 217              		.loc 1 54 0
 218 01c4 10009FE5 		ldr	r0, .L11
 219 01c8 FEFFFFEB 		bl	CyU3PDmaChannelDiscardBuffer
  55:../DebugConsole.c **** 		CyU3PUartRxSetBlockXfer(1);
 220              		.loc 1 55 0
 221 01cc 0100A0E3 		mov	r0, #1
 222 01d0 FEFFFFEB 		bl	CyU3PUartRxSetBlockXfer
 223              	.L1:
  56:../DebugConsole.c ****     }
  57:../DebugConsole.c **** }
 224              		.loc 1 57 0
 225 01d4 04D04BE2 		sub	sp, fp, #4
 226 01d8 0088BDE8 		ldmfd	sp!, {fp, pc}
 227              	.L12:
 228              		.align	2
 229              	.L11:
 230 01dc 00000000 		.word	glUARTtoCPU_Handle
 231 01e0 00000000 		.word	.LC0
 232 01e4 04000000 		.word	.LC1
 233 01e8 08000000 		.word	.LC2
 234 01ec 00000000 		.word	glConsoleInBuffer
 235 01f0 10000000 		.word	.LC3
 236 01f4 18000000 		.word	.LC4
 237 01f8 20000000 		.word	.LC5
 238 01fc 28000000 		.word	.LC6
 239 0200 38000000 		.word	.LC7
 240 0204 00000000 		.word	glConsoleInIndex
 241              		.cfi_endproc
 242              	.LFE0:
 244              		.section	.rodata
 245 004f 00       		.align	2
 246              	.LC8:
 247 0050 43795533 		.ascii	"CyU3PUartInit\000"
 247      50556172 
 247      74496E69 
 247      7400
 248 005e 0000     		.align	2
 249              	.LC9:
 250 0060 43795533 		.ascii	"CyU3PUartSetConfig\000"
 250      50556172 
 250      74536574 
 250      436F6E66 
 250      696700
 251 0073 00       		.align	2
 252              	.LC10:
 253 0074 43795533 		.ascii	"CyU3PUartTxSetBlockXfer\000"
 253      50556172 
 253      74547853 
 253      6574426C 
 253      6F636B58 
 254              		.align	2
 255              	.LC11:
 256 008c 436F6E73 		.ascii	"ConsoleOutEnabled\000"
 256      6F6C654F 
 256      7574456E 
 256      61626C65 
 256      6400
 257 009e 0000     		.align	2
 258              	.LC12:
 259 00a0 43795533 		.ascii	"CyU3PUartRxSetBlockXfer\000"
 259      50556172 
 259      74527853 
 259      6574426C 
 259      6F636B58 
 260              		.align	2
 261              	.LC13:
 262 00b8 43726561 		.ascii	"CreateDebugRxDmaChannel\000"
 262      74654465 
 262      62756752 
 262      78446D61 
 262      4368616E 
 263              		.align	2
 264              	.LC14:
 265 00d0 436F6E73 		.ascii	"ConsoleInEnabled\000"
 265      6F6C6549 
 265      6E456E61 
 265      626C6564 
 265      00
 266 00e1 000000   		.section	.text.InitializeDebugConsole,"ax",%progbits
 267              		.align	2
 268              		.global	InitializeDebugConsole
 270              	InitializeDebugConsole:
 271              	.LFB1:
  58:../DebugConsole.c **** 
  59:../DebugConsole.c **** // Spin up the DEBUG Console, Out and In
  60:../DebugConsole.c **** CyU3PReturnStatus_t InitializeDebugConsole(void)
  61:../DebugConsole.c **** {
 272              		.loc 1 61 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 56
 275              		@ frame_needed = 1, uses_anonymous_args = 0
 276 0000 00482DE9 		stmfd	sp!, {fp, lr}
 277              	.LCFI2:
 278              		.cfi_def_cfa_offset 8
 279 0004 04B08DE2 		add	fp, sp, #4
 280              		.cfi_offset 14, -4
 281              		.cfi_offset 11, -8
 282              	.LCFI3:
 283              		.cfi_def_cfa 11, 4
 284 0008 38D04DE2 		sub	sp, sp, #56
  62:../DebugConsole.c ****     CyU3PUartConfig_t uartConfig;
  63:../DebugConsole.c ****     CyU3PDmaChannelConfig_t dmaConfig;
  64:../DebugConsole.c ****     CyU3PReturnStatus_t Status = CY_U3P_SUCCESS;
 285              		.loc 1 64 0
 286 000c 0030A0E3 		mov	r3, #0
 287 0010 08300BE5 		str	r3, [fp, #-8]
  65:../DebugConsole.c **** 
  66:../DebugConsole.c ****     Status = CyU3PUartInit();										// Start the UART driver
 288              		.loc 1 66 0
 289 0014 FEFFFFEB 		bl	CyU3PUartInit
 290 0018 08000BE5 		str	r0, [fp, #-8]
  67:../DebugConsole.c ****     CheckStatus("CyU3PUartInit", Status);							// Note that this won't display since console is no
 291              		.loc 1 67 0
 292 001c 78019FE5 		ldr	r0, .L17
 293 0020 08101BE5 		ldr	r1, [fp, #-8]
 294 0024 FEFFFFEB 		bl	CheckStatus
  68:../DebugConsole.c **** 
  69:../DebugConsole.c ****     CyU3PMemSet ((uint8_t *)&uartConfig, 0, sizeof (uartConfig));
 295              		.loc 1 69 0
 296 0028 20304BE2 		sub	r3, fp, #32
 297 002c 0300A0E1 		mov	r0, r3
 298 0030 0010A0E3 		mov	r1, #0
 299 0034 1820A0E3 		mov	r2, #24
 300 0038 FEFFFFEB 		bl	CyU3PMemSet
  70:../DebugConsole.c **** 	uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
 301              		.loc 1 70 0
 302 003c 5C319FE5 		ldr	r3, .L17+4
 303 0040 10300BE5 		str	r3, [fp, #-16]
  71:../DebugConsole.c **** 	uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
 304              		.loc 1 71 0
 305 0044 0130A0E3 		mov	r3, #1
 306 0048 0C304BE5 		strb	r3, [fp, #-12]
  72:../DebugConsole.c **** //r	uartConfig.parity   = CY_U3P_UART_NO_PARITY;
  73:../DebugConsole.c **** 	uartConfig.txEnable = CyTrue;
 307              		.loc 1 73 0
 308 004c 0130A0E3 		mov	r3, #1
 309 0050 20300BE5 		str	r3, [fp, #-32]
  74:../DebugConsole.c **** 	uartConfig.rxEnable = CyTrue;
 310              		.loc 1 74 0
 311 0054 0130A0E3 		mov	r3, #1
 312 0058 1C300BE5 		str	r3, [fp, #-28]
  75:../DebugConsole.c **** //r	uartConfig.flowCtrl = CyFalse;
  76:../DebugConsole.c **** 	uartConfig.isDma    = CyTrue;
 313              		.loc 1 76 0
 314 005c 0130A0E3 		mov	r3, #1
 315 0060 14300BE5 		str	r3, [fp, #-20]
  77:../DebugConsole.c **** 	Status = CyU3PUartSetConfig(&uartConfig, UartCallback);			// Configure the UART hardware
 316              		.loc 1 77 0
 317 0064 20304BE2 		sub	r3, fp, #32
 318 0068 0300A0E1 		mov	r0, r3
 319 006c 30119FE5 		ldr	r1, .L17+8
 320 0070 FEFFFFEB 		bl	CyU3PUartSetConfig
 321 0074 08000BE5 		str	r0, [fp, #-8]
  78:../DebugConsole.c ****     CheckStatus("CyU3PUartSetConfig", Status);
 322              		.loc 1 78 0
 323 0078 28019FE5 		ldr	r0, .L17+12
 324 007c 08101BE5 		ldr	r1, [fp, #-8]
 325 0080 FEFFFFEB 		bl	CheckStatus
  79:../DebugConsole.c **** 
  80:../DebugConsole.c ****     Status = CyU3PUartTxSetBlockXfer(0xFFFFFFFF);					// Send as much data as I need to
 326              		.loc 1 80 0
 327 0084 0000E0E3 		mvn	r0, #0
 328 0088 FEFFFFEB 		bl	CyU3PUartTxSetBlockXfer
 329 008c 08000BE5 		str	r0, [fp, #-8]
  81:../DebugConsole.c ****     CheckStatus("CyU3PUartTxSetBlockXfer", Status);
 330              		.loc 1 81 0
 331 0090 14019FE5 		ldr	r0, .L17+16
 332 0094 08101BE5 		ldr	r1, [fp, #-8]
 333 0098 FEFFFFEB 		bl	CheckStatus
  82:../DebugConsole.c **** 
  83:../DebugConsole.c **** 	Status = CyU3PDebugInit(CY_U3P_LPP_SOCKET_UART_CONS, 8);		// Attach the Debug driver above the UAR
 334              		.loc 1 83 0
 335 009c 0300A0E3 		mov	r0, #3
 336 00a0 0810A0E3 		mov	r1, #8
 337 00a4 FEFFFFEB 		bl	CyU3PDebugInit
 338 00a8 08000BE5 		str	r0, [fp, #-8]
  84:../DebugConsole.c **** 	if (Status == CY_U3P_SUCCESS) glDebugTxEnabled = CyTrue;		// Console Out is now up :-)
 339              		.loc 1 84 0
 340 00ac 08301BE5 		ldr	r3, [fp, #-8]
 341 00b0 000053E3 		cmp	r3, #0
 342 00b4 0200001A 		bne	.L14
 343              		.loc 1 84 0 is_stmt 0 discriminator 1
 344 00b8 F0309FE5 		ldr	r3, .L17+20
 345 00bc 0120A0E3 		mov	r2, #1
 346 00c0 002083E5 		str	r2, [r3, #0]
 347              	.L14:
  85:../DebugConsole.c ****     CheckStatus("ConsoleOutEnabled", Status);
 348              		.loc 1 85 0 is_stmt 1
 349 00c4 E8009FE5 		ldr	r0, .L17+24
 350 00c8 08101BE5 		ldr	r1, [fp, #-8]
 351 00cc FEFFFFEB 		bl	CheckStatus
  86:../DebugConsole.c **** 	CyU3PDebugPreamble(CyFalse);									// Skip preamble, debug info is targeted for a person
 352              		.loc 1 86 0
 353 00d0 0000A0E3 		mov	r0, #0
 354 00d4 FEFFFFEB 		bl	CyU3PDebugPreamble
  87:../DebugConsole.c **** 
  88:../DebugConsole.c **** 	// Now setup a DMA channel to receive characters from the Uart Rx
  89:../DebugConsole.c ****     Status = CyU3PUartRxSetBlockXfer(1);
 355              		.loc 1 89 0
 356 00d8 0100A0E3 		mov	r0, #1
 357 00dc FEFFFFEB 		bl	CyU3PUartRxSetBlockXfer
 358 00e0 08000BE5 		str	r0, [fp, #-8]
  90:../DebugConsole.c ****     CheckStatus("CyU3PUartRxSetBlockXfer", Status);
 359              		.loc 1 90 0
 360 00e4 CC009FE5 		ldr	r0, .L17+28
 361 00e8 08101BE5 		ldr	r1, [fp, #-8]
 362 00ec FEFFFFEB 		bl	CheckStatus
  91:../DebugConsole.c **** 	CyU3PMemSet((uint8_t *)&dmaConfig, 0, sizeof(dmaConfig));
 363              		.loc 1 91 0
 364 00f0 3C304BE2 		sub	r3, fp, #60
 365 00f4 0300A0E1 		mov	r0, r3
 366 00f8 0010A0E3 		mov	r1, #0
 367 00fc 1C20A0E3 		mov	r2, #28
 368 0100 FEFFFFEB 		bl	CyU3PMemSet
  92:../DebugConsole.c **** 	dmaConfig.size  		= 16;									// Minimum size allowed, I only need 1 byte
 369              		.loc 1 92 0
 370 0104 1030A0E3 		mov	r3, #16
 371 0108 BC334BE1 		strh	r3, [fp, #-60]	@ movhi
  93:../DebugConsole.c **** 	dmaConfig.count 		= 1;									// I can't type faster than the Uart Callback routine!
 372              		.loc 1 93 0
 373 010c 0130A0E3 		mov	r3, #1
 374 0110 BA334BE1 		strh	r3, [fp, #-58]	@ movhi
  94:../DebugConsole.c **** 	dmaConfig.prodSckId		= CY_U3P_LPP_SOCKET_UART_PROD;
 375              		.loc 1 94 0
 376 0114 0630A0E3 		mov	r3, #6
 377 0118 B8334BE1 		strh	r3, [fp, #-56]	@ movhi
  95:../DebugConsole.c **** 	dmaConfig.consSckId 	= CY_U3P_CPU_SOCKET_CONS;
 378              		.loc 1 95 0
 379 011c 3F3CA0E3 		mov	r3, #16128
 380 0120 B6334BE1 		strh	r3, [fp, #-54]	@ movhi
  96:../DebugConsole.c **** 	dmaConfig.dmaMode 		= CY_U3P_DMA_MODE_BYTE;
 381              		.loc 1 96 0
 382 0124 0030A0E3 		mov	r3, #0
 383 0128 2C304BE5 		strb	r3, [fp, #-44]
  97:../DebugConsole.c **** 	dmaConfig.notification	= CY_U3P_DMA_CB_PROD_EVENT;
 384              		.loc 1 97 0
 385 012c 0830A0E3 		mov	r3, #8
 386 0130 28300BE5 		str	r3, [fp, #-40]
  98:../DebugConsole.c **** 	Status = CyU3PDmaChannelCreate(&glUARTtoCPU_Handle, CY_U3P_DMA_TYPE_MANUAL_IN, &dmaConfig);
 387              		.loc 1 98 0
 388 0134 3C304BE2 		sub	r3, fp, #60
 389 0138 7C009FE5 		ldr	r0, .L17+32
 390 013c 0310A0E3 		mov	r1, #3
 391 0140 0320A0E1 		mov	r2, r3
 392 0144 FEFFFFEB 		bl	CyU3PDmaChannelCreate
 393 0148 08000BE5 		str	r0, [fp, #-8]
  99:../DebugConsole.c ****     CheckStatus("CreateDebugRxDmaChannel", Status);
 394              		.loc 1 99 0
 395 014c 6C009FE5 		ldr	r0, .L17+36
 396 0150 08101BE5 		ldr	r1, [fp, #-8]
 397 0154 FEFFFFEB 		bl	CheckStatus
 100:../DebugConsole.c ****     if (Status != CY_U3P_SUCCESS) CyU3PDmaChannelDestroy(&glUARTtoCPU_Handle);
 398              		.loc 1 100 0
 399 0158 08301BE5 		ldr	r3, [fp, #-8]
 400 015c 000053E3 		cmp	r3, #0
 401 0160 0200000A 		beq	.L15
 402              		.loc 1 100 0 is_stmt 0 discriminator 1
 403 0164 50009FE5 		ldr	r0, .L17+32
 404 0168 FEFFFFEB 		bl	CyU3PDmaChannelDestroy
 405 016c 060000EA 		b	.L16
 406              	.L15:
 101:../DebugConsole.c ****     else
 102:../DebugConsole.c ****     {
 103:../DebugConsole.c **** 		Status = CyU3PDmaChannelSetXfer(&glUARTtoCPU_Handle, INFINITE_TRANSFER_SIZE);
 407              		.loc 1 103 0 is_stmt 1
 408 0170 44009FE5 		ldr	r0, .L17+32
 409 0174 0010A0E3 		mov	r1, #0
 410 0178 FEFFFFEB 		bl	CyU3PDmaChannelSetXfer
 411 017c 08000BE5 		str	r0, [fp, #-8]
 104:../DebugConsole.c **** 		CheckStatus("ConsoleInEnabled", Status);
 412              		.loc 1 104 0
 413 0180 3C009FE5 		ldr	r0, .L17+40
 414 0184 08101BE5 		ldr	r1, [fp, #-8]
 415 0188 FEFFFFEB 		bl	CheckStatus
 416              	.L16:
 105:../DebugConsole.c ****     }
 106:../DebugConsole.c ****     return Status;
 417              		.loc 1 106 0
 418 018c 08301BE5 		ldr	r3, [fp, #-8]
 107:../DebugConsole.c **** }
 419              		.loc 1 107 0
 420 0190 0300A0E1 		mov	r0, r3
 421 0194 04D04BE2 		sub	sp, fp, #4
 422 0198 0088BDE8 		ldmfd	sp!, {fp, pc}
 423              	.L18:
 424              		.align	2
 425              	.L17:
 426 019c 50000000 		.word	.LC8
 427 01a0 00C20100 		.word	115200
 428 01a4 00000000 		.word	UartCallback
 429 01a8 60000000 		.word	.LC9
 430 01ac 74000000 		.word	.LC10
 431 01b0 00000000 		.word	glDebugTxEnabled
 432 01b4 8C000000 		.word	.LC11
 433 01b8 A0000000 		.word	.LC12
 434 01bc 00000000 		.word	glUARTtoCPU_Handle
 435 01c0 B8000000 		.word	.LC13
 436 01c4 D0000000 		.word	.LC14
 437              		.cfi_endproc
 438              	.LFE1:
 440              		.text
 441              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 DebugConsole.c
C:\Users\John\AppData\Local\Temp\ccaPaWiX.s:26     .bss.glDebugTxEnabled:00000000 glDebugTxEnabled
C:\Users\John\AppData\Local\Temp\ccaPaWiX.s:23     .bss.glDebugTxEnabled:00000000 $d
                            *COM*:000000a0 glUARTtoCPU_Handle
                            *COM*:00000020 glConsoleInBuffer
                            *COM*:00000004 glConsoleInIndex
C:\Users\John\AppData\Local\Temp\ccaPaWiX.s:32     .rodata:00000000 $d
C:\Users\John\AppData\Local\Temp\ccaPaWiX.s:57     .text.UartCallback:00000000 $a
C:\Users\John\AppData\Local\Temp\ccaPaWiX.s:60     .text.UartCallback:00000000 UartCallback
C:\Users\John\AppData\Local\Temp\ccaPaWiX.s:230    .text.UartCallback:000001dc $d
C:\Users\John\AppData\Local\Temp\ccaPaWiX.s:267    .text.InitializeDebugConsole:00000000 $a
C:\Users\John\AppData\Local\Temp\ccaPaWiX.s:270    .text.InitializeDebugConsole:00000000 InitializeDebugConsole
C:\Users\John\AppData\Local\Temp\ccaPaWiX.s:426    .text.InitializeDebugConsole:0000019c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CyU3PDmaChannelSetWrapUp
CyU3PDmaChannelGetBuffer
CyU3PDebugPrint
strcmp
StartApplication
StopApplication
strncmp
IndicateError
_tx_thread_sleep
CyU3PDeviceReset
CyU3PDmaChannelDiscardBuffer
CyU3PUartRxSetBlockXfer
CyU3PUartInit
CheckStatus
CyU3PMemSet
CyU3PUartSetConfig
CyU3PUartTxSetBlockXfer
CyU3PDebugInit
CyU3PDebugPreamble
CyU3PDmaChannelCreate
CyU3PDmaChannelDestroy
CyU3PDmaChannelSetXfer
