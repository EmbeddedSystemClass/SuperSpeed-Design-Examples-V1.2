   1              		.cpu arm926ej-s
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"Support.c"
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.global	ErrorCodeTextLookupTable
  22              		.section	.rodata
  23              		.align	2
  24              	.LC0:
  25 0000 53554343 		.ascii	"SUCCESS\000"
  25      45535300 
  26              		.align	2
  27              	.LC1:
  28 0008 44454C45 		.ascii	"DELETED\000"
  28      54454400 
  29              		.align	2
  30              	.LC2:
  31 0010 4241445F 		.ascii	"BAD_POOL\000"
  31      504F4F4C 
  31      00
  32 0019 000000   		.align	2
  33              	.LC3:
  34 001c 4241445F 		.ascii	"BAD_POINTER\000"
  34      504F494E 
  34      54455200 
  35              		.align	2
  36              	.LC4:
  37 0028 494E5641 		.ascii	"INVALID_WAIT\000"
  37      4C49445F 
  37      57414954 
  37      00
  38 0035 000000   		.align	2
  39              	.LC5:
  40 0038 4241445F 		.ascii	"BAD_SIZE\000"
  40      53495A45 
  40      00
  41 0041 000000   		.align	2
  42              	.LC6:
  43 0044 4241445F 		.ascii	"BAD_EVENT_GROUP\000"
  43      4556454E 
  43      545F4752 
  43      4F555000 
  44              		.align	2
  45              	.LC7:
  46 0054 4E4F5F45 		.ascii	"NO_EVENTS\000"
  46      56454E54 
  46      5300
  47 005e 0000     		.align	2
  48              	.LC8:
  49 0060 4241445F 		.ascii	"BAD_OPTION\000"
  49      4F505449 
  49      4F4E00
  50 006b 00       		.align	2
  51              	.LC9:
  52 006c 4241445F 		.ascii	"BAD_QUEUE\000"
  52      51554555 
  52      4500
  53 0076 0000     		.align	2
  54              	.LC10:
  55 0078 51554555 		.ascii	"QUEUE_EMPTY\000"
  55      455F454D 
  55      50545900 
  56              		.align	2
  57              	.LC11:
  58 0084 51554555 		.ascii	"QUEUE_FULL\000"
  58      455F4655 
  58      4C4C00
  59 008f 00       		.align	2
  60              	.LC12:
  61 0090 4241445F 		.ascii	"BAD_SEMAPHORE\000"
  61      53454D41 
  61      50484F52 
  61      4500
  62 009e 0000     		.align	2
  63              	.LC13:
  64 00a0 4745545F 		.ascii	"GET_SEMAPHORE_FAIL\000"
  64      53454D41 
  64      50484F52 
  64      455F4641 
  64      494C00
  65 00b3 00       		.align	2
  66              	.LC14:
  67 00b4 4241445F 		.ascii	"BAD_THREAD\000"
  67      54485245 
  67      414400
  68 00bf 00       		.align	2
  69              	.LC15:
  70 00c0 4241445F 		.ascii	"BAD_PRIORITY\000"
  70      5052494F 
  70      52495459 
  70      00
  71 00cd 000000   		.align	2
  72              	.LC16:
  73 00d0 4D454D4F 		.ascii	"MEMORY_ERROR\000"
  73      52595F45 
  73      52524F52 
  73      00
  74 00dd 000000   		.align	2
  75              	.LC17:
  76 00e0 44454C45 		.ascii	"DELETE_FAILED\000"
  76      54455F46 
  76      41494C45 
  76      4400
  77 00ee 0000     		.align	2
  78              	.LC18:
  79 00f0 52455355 		.ascii	"RESUME_FAILED\000"
  79      4D455F46 
  79      41494C45 
  79      4400
  80 00fe 0000     		.align	2
  81              	.LC19:
  82 0100 494E5641 		.ascii	"INVALID_CALLER\000"
  82      4C49445F 
  82      43414C4C 
  82      455200
  83 010f 00       		.align	2
  84              	.LC20:
  85 0110 53555350 		.ascii	"SUSPEND_FAILED\000"
  85      454E445F 
  85      4641494C 
  85      454400
  86 011f 00       		.align	2
  87              	.LC21:
  88 0120 4241445F 		.ascii	"BAD_TIMER\000"
  88      54494D45 
  88      5200
  89 012a 0000     		.align	2
  90              	.LC22:
  91 012c 4241445F 		.ascii	"BAD_TICK\000"
  91      5449434B 
  91      00
  92 0135 000000   		.align	2
  93              	.LC23:
  94 0138 41435449 		.ascii	"ACTIVATE_FAILED\000"
  94      56415445 
  94      5F464149 
  94      4C454400 
  95              		.align	2
  96              	.LC24:
  97 0148 4241445F 		.ascii	"BAD_THRESHOLD\000"
  97      54485245 
  97      53484F4C 
  97      4400
  98 0156 0000     		.align	2
  99              	.LC25:
 100 0158 53555350 		.ascii	"SUSPEND_LIFTED\000"
 100      454E445F 
 100      4C494654 
 100      454400
 101 0167 00       		.align	2
 102              	.LC26:
 103 0168 57414954 		.ascii	"WAIT_ABORTED\000"
 103      5F41424F 
 103      52544544 
 103      00
 104 0175 000000   		.align	2
 105              	.LC27:
 106 0178 57414954 		.ascii	"WAIT_ABORT_FAILED\000"
 106      5F41424F 
 106      52545F46 
 106      41494C45 
 106      4400
 107 018a 0000     		.align	2
 108              	.LC28:
 109 018c 4241445F 		.ascii	"BAD_MUTEX\000"
 109      4D555445 
 109      5800
 110 0196 0000     		.align	2
 111              	.LC29:
 112 0198 4D555445 		.ascii	"MUTEX_FAILURE\000"
 112      585F4641 
 112      494C5552 
 112      4500
 113 01a6 0000     		.align	2
 114              	.LC30:
 115 01a8 4D555445 		.ascii	"MUTEX_PUT_FAILED\000"
 115      585F5055 
 115      545F4641 
 115      494C4544 
 115      00
 116 01b9 000000   		.align	2
 117              	.LC31:
 118 01bc 494E4845 		.ascii	"INHERIT_FAILED\000"
 118      5249545F 
 118      4641494C 
 118      454400
 119 01cb 00       		.align	2
 120              	.LC32:
 121 01cc 4E4F545F 		.ascii	"NOT_IDLE\000"
 121      49444C45 
 121      00
 122 01d5 000000   		.align	2
 123              	.LC33:
 124 01d8 4241445F 		.ascii	"BAD_ARGUMENT\000"
 124      41524755 
 124      4D454E54 
 124      00
 125 01e5 000000   		.align	2
 126              	.LC34:
 127 01e8 4E554C4C 		.ascii	"NULL_POINTER\000"
 127      5F504F49 
 127      4E544552 
 127      00
 128 01f5 000000   		.align	2
 129              	.LC35:
 130 01f8 4E4F545F 		.ascii	"NOT_STARTED\000"
 130      53544152 
 130      54454400 
 131              		.align	2
 132              	.LC36:
 133 0204 414C5245 		.ascii	"ALREADY_STARTED\000"
 133      4144595F 
 133      53544152 
 133      54454400 
 134              		.align	2
 135              	.LC37:
 136 0214 4E4F545F 		.ascii	"NOT_CONFIGURED\000"
 136      434F4E46 
 136      49475552 
 136      454400
 137 0223 00       		.align	2
 138              	.LC38:
 139 0224 54494D45 		.ascii	"TIMEOUT\000"
 139      4F555400 
 140              		.align	2
 141              	.LC39:
 142 022c 4E4F545F 		.ascii	"NOT_SUPPORTED\000"
 142      53555050 
 142      4F525445 
 142      4400
 143 023a 0000     		.align	2
 144              	.LC40:
 145 023c 494E5641 		.ascii	"INVALID_SEQUENCE\000"
 145      4C49445F 
 145      53455155 
 145      454E4345 
 145      00
 146 024d 000000   		.align	2
 147              	.LC41:
 148 0250 41424F52 		.ascii	"ABORTED\000"
 148      54454400 
 149              		.align	2
 150              	.LC42:
 151 0258 444D415F 		.ascii	"DMA_FAILURE\000"
 151      4641494C 
 151      55524500 
 152              		.align	2
 153              	.LC43:
 154 0264 4641494C 		.ascii	"FAILURE\000"
 154      55524500 
 155              		.align	2
 156              	.LC44:
 157 026c 4241445F 		.ascii	"BAD_INDEX\000"
 157      494E4445 
 157      5800
 158 0276 0000     		.align	2
 159              	.LC45:
 160 0278 4241445F 		.ascii	"BAD_ENUM_METHOD\000"
 160      454E554D 
 160      5F4D4554 
 160      484F4400 
 161              		.align	2
 162              	.LC46:
 163 0288 494E5641 		.ascii	"INVALID_CONFIGURATION\000"
 163      4C49445F 
 163      434F4E46 
 163      49475552 
 163      4154494F 
 164 029e 0000     		.align	2
 165              	.LC47:
 166 02a0 4348414E 		.ascii	"CHANNEL_CREATE_FAILED\000"
 166      4E454C5F 
 166      43524541 
 166      54455F46 
 166      41494C45 
 167 02b6 0000     		.align	2
 168              	.LC48:
 169 02b8 4348414E 		.ascii	"CHANNEL_DESTROY_FAILED\000"
 169      4E454C5F 
 169      44455354 
 169      524F595F 
 169      4641494C 
 170 02cf 00       		.align	2
 171              	.LC49:
 172 02d0 4241445F 		.ascii	"BAD_DESCRIPTOR_TYPE\000"
 172      44455343 
 172      52495054 
 172      4F525F54 
 172      59504500 
 173              		.align	2
 174              	.LC50:
 175 02e4 58464552 		.ascii	"XFER_CANCELLED\000"
 175      5F43414E 
 175      43454C4C 
 175      454400
 176 02f3 00       		.align	2
 177              	.LC51:
 178 02f4 46454154 		.ascii	"FEATURE_NOT_ENABLED\000"
 178      5552455F 
 178      4E4F545F 
 178      454E4142 
 178      4C454400 
 179              		.align	2
 180              	.LC52:
 181 0308 5354414C 		.ascii	"STALLED\000"
 181      4C454400 
 182              		.align	2
 183              	.LC53:
 184 0310 424C4F43 		.ascii	"BLOCK_FAILURE\000"
 184      4B5F4641 
 184      494C5552 
 184      4500
 185 031e 0000     		.align	2
 186              	.LC54:
 187 0320 4C4F5354 		.ascii	"LOST_ARBITRATION\000"
 187      5F415242 
 187      49545241 
 187      54494F4E 
 187      00
 188 0331 000000   		.align	2
 189              	.LC55:
 190 0334 5354414E 		.ascii	"STANDBY_FAILED\000"
 190      4442595F 
 190      4641494C 
 190      454400
 191 0343 00       		.align	2
 192              	.LC56:
 193 0344 494E5641 		.ascii	"INVALID_VOLTAGE_RANGE\000"
 193      4C49445F 
 193      564F4C54 
 193      4147455F 
 193      52414E47 
 194 035a 0000     		.align	2
 195              	.LC57:
 196 035c 43415244 		.ascii	"CARD_WRONG_RESPONSE\000"
 196      5F57524F 
 196      4E475F52 
 196      4553504F 
 196      4E534500 
 197              		.align	2
 198              	.LC58:
 199 0370 554E5355 		.ascii	"UNSUPPORTED_CARD\000"
 199      50504F52 
 199      5445445F 
 199      43415244 
 199      00
 200 0381 000000   		.align	2
 201              	.LC59:
 202 0384 43415244 		.ascii	"CARD_WRONG_STATE\000"
 202      5F57524F 
 202      4E475F53 
 202      54415445 
 202      00
 203 0395 000000   		.align	2
 204              	.LC60:
 205 0398 434D445F 		.ascii	"CMD_NOT_SUPPORTED\000"
 205      4E4F545F 
 205      53555050 
 205      4F525445 
 205      4400
 206 03aa 0000     		.align	2
 207              	.LC61:
 208 03ac 43524300 		.ascii	"CRC\000"
 209              		.align	2
 210              	.LC62:
 211 03b0 494E5641 		.ascii	"INVALID_ADDR\000"
 211      4C49445F 
 211      41444452 
 211      00
 212 03bd 000000   		.align	2
 213              	.LC63:
 214 03c0 494E5641 		.ascii	"INVALID_UNIT\000"
 214      4C49445F 
 214      554E4954 
 214      00
 215 03cd 000000   		.align	2
 216              	.LC64:
 217 03d0 494E5641 		.ascii	"INVALID_DEV\000"
 217      4C49445F 
 217      44455600 
 218              		.align	2
 219              	.LC65:
 220 03dc 414C5245 		.ascii	"ALREADY_PARTITIONED\000"
 220      4144595F 
 220      50415254 
 220      4954494F 
 220      4E454400 
 221              		.align	2
 222              	.LC66:
 223 03f0 4E4F545F 		.ascii	"NOT_PARTITIONED\000"
 223      50415254 
 223      4954494F 
 223      4E454400 
 224              		.align	2
 225              	.LC67:
 226 0400 4241445F 		.ascii	"BAD_PARTITION\000"
 226      50415254 
 226      4954494F 
 226      4E00
 227 040e 0000     		.align	2
 228              	.LC68:
 229 0410 52454144 		.ascii	"READ_WRITE_ABORTED\000"
 229      5F575249 
 229      54455F41 
 229      424F5254 
 229      454400
 230 0423 00       		.align	2
 231              	.LC69:
 232 0424 57524954 		.ascii	"WRITE_PROTECTED\000"
 232      455F5052 
 232      4F544543 
 232      54454400 
 233              		.align	2
 234              	.LC70:
 235 0434 5349425F 		.ascii	"SIB_INIT\000"
 235      494E4954 
 235      00
 236 043d 000000   		.align	2
 237              	.LC71:
 238 0440 43415244 		.ascii	"CARD_LOCKED\000"
 238      5F4C4F43 
 238      4B454400 
 239              		.align	2
 240              	.LC72:
 241 044c 43415244 		.ascii	"CARD_LOCK_FAILURE\000"
 241      5F4C4F43 
 241      4B5F4641 
 241      494C5552 
 241      4500
 242 045e 0000     		.align	2
 243              	.LC73:
 244 0460 43415244 		.ascii	"CARD_FORCE_ERASE\000"
 244      5F464F52 
 244      43455F45 
 244      52415345 
 244      00
 245 0471 000000   		.align	2
 246              	.LC74:
 247 0474 494E5641 		.ascii	"INVALID_BLOCKSIZE\000"
 247      4C49445F 
 247      424C4F43 
 247      4B53495A 
 247      4500
 248 0486 0000     		.align	2
 249              	.LC75:
 250 0488 494E5641 		.ascii	"INVALID_FUNCTION\000"
 250      4C49445F 
 250      46554E43 
 250      54494F4E 
 250      00
 251 0499 000000   		.align	2
 252              	.LC76:
 253 049c 5455504C 		.ascii	"TUPLE_NOT_FOUND\000"
 253      455F4E4F 
 253      545F464F 
 253      554E4400 
 254              		.align	2
 255              	.LC77:
 256 04ac 494F5F41 		.ascii	"IO_ABORTED\000"
 256      424F5254 
 256      454400
 257 04b7 00       		.align	2
 258              	.LC78:
 259 04b8 494F5F53 		.ascii	"IO_SUSPENDED\000"
 259      55535045 
 259      4E444544 
 259      00
 260 04c5 000000   		.align	2
 261              	.LC79:
 262 04c8 494C4C45 		.ascii	"ILLEGAL_CMD\000"
 262      47414C5F 
 262      434D4400 
 263              		.align	2
 264              	.LC80:
 265 04d4 5344494F 		.ascii	"SDIO_UNKNOWN\000"
 265      5F554E4B 
 265      4E4F574E 
 265      00
 266 04e1 000000   		.align	2
 267              	.LC81:
 268 04e4 4241445F 		.ascii	"BAD_CMD_ARG\000"
 268      434D445F 
 268      41524700 
 269              		.align	2
 270              	.LC82:
 271 04f0 554E494E 		.ascii	"UNINITIALIZED_FUNCTION\000"
 271      49544941 
 271      4C495A45 
 271      445F4655 
 271      4E435449 
 272 0507 00       		.align	2
 273              	.LC83:
 274 0508 43415244 		.ascii	"CARD_NOT_ACTIVE\000"
 274      5F4E4F54 
 274      5F414354 
 274      49564500 
 275              		.align	2
 276              	.LC84:
 277 0518 44455649 		.ascii	"DEVICE_BUSY\000"
 277      43455F42 
 277      55535900 
 278              		.align	2
 279              	.LC85:
 280 0524 4E4F5F4D 		.ascii	"NO_METADATA\000"
 280      45544144 
 280      41544100 
 281              		.align	2
 282              	.LC86:
 283 0530 43415244 		.ascii	"CARD_UNHEALTHY\000"
 283      5F554E48 
 283      45414C54 
 283      485900
 284 053f 00       		.align	2
 285              	.LC87:
 286 0540 4D454449 		.ascii	"MEDIA_FAILURE\000"
 286      415F4641 
 286      494C5552 
 286      4500
 287              		.section	.data.ErrorCodeTextLookupTable,"aw",%progbits
 288              		.align	2
 291              	ErrorCodeTextLookupTable:
 292 0000 00000000 		.word	.LC0
 293 0004 08000000 		.word	.LC1
 294 0008 10000000 		.word	.LC2
 295 000c 1C000000 		.word	.LC3
 296 0010 28000000 		.word	.LC4
 297 0014 38000000 		.word	.LC5
 298 0018 44000000 		.word	.LC6
 299 001c 54000000 		.word	.LC7
 300 0020 60000000 		.word	.LC8
 301 0024 6C000000 		.word	.LC9
 302 0028 78000000 		.word	.LC10
 303 002c 84000000 		.word	.LC11
 304 0030 90000000 		.word	.LC12
 305 0034 A0000000 		.word	.LC13
 306 0038 B4000000 		.word	.LC14
 307 003c C0000000 		.word	.LC15
 308 0040 D0000000 		.word	.LC16
 309 0044 E0000000 		.word	.LC17
 310 0048 F0000000 		.word	.LC18
 311 004c 00010000 		.word	.LC19
 312 0050 10010000 		.word	.LC20
 313 0054 20010000 		.word	.LC21
 314 0058 2C010000 		.word	.LC22
 315 005c 38010000 		.word	.LC23
 316 0060 48010000 		.word	.LC24
 317 0064 58010000 		.word	.LC25
 318 0068 68010000 		.word	.LC26
 319 006c 78010000 		.word	.LC27
 320 0070 8C010000 		.word	.LC28
 321 0074 98010000 		.word	.LC29
 322 0078 A8010000 		.word	.LC30
 323 007c BC010000 		.word	.LC31
 324 0080 CC010000 		.word	.LC32
 325 0084 00000000 		.word	0
 326 0088 00000000 		.word	0
 327 008c 00000000 		.word	0
 328 0090 00000000 		.word	0
 329 0094 00000000 		.word	0
 330 0098 00000000 		.word	0
 331 009c 00000000 		.word	0
 332 00a0 00000000 		.word	0
 333 00a4 00000000 		.word	0
 334 00a8 00000000 		.word	0
 335 00ac 00000000 		.word	0
 336 00b0 00000000 		.word	0
 337 00b4 00000000 		.word	0
 338 00b8 00000000 		.word	0
 339 00bc 00000000 		.word	0
 340 00c0 00000000 		.word	0
 341 00c4 00000000 		.word	0
 342 00c8 00000000 		.word	0
 343 00cc 00000000 		.word	0
 344 00d0 00000000 		.word	0
 345 00d4 00000000 		.word	0
 346 00d8 00000000 		.word	0
 347 00dc 00000000 		.word	0
 348 00e0 00000000 		.word	0
 349 00e4 00000000 		.word	0
 350 00e8 00000000 		.word	0
 351 00ec 00000000 		.word	0
 352 00f0 00000000 		.word	0
 353 00f4 00000000 		.word	0
 354 00f8 00000000 		.word	0
 355 00fc 00000000 		.word	0
 356 0100 D8010000 		.word	.LC33
 357 0104 E8010000 		.word	.LC34
 358 0108 F8010000 		.word	.LC35
 359 010c 04020000 		.word	.LC36
 360 0110 14020000 		.word	.LC37
 361 0114 24020000 		.word	.LC38
 362 0118 2C020000 		.word	.LC39
 363 011c 3C020000 		.word	.LC40
 364 0120 50020000 		.word	.LC41
 365 0124 58020000 		.word	.LC42
 366 0128 64020000 		.word	.LC43
 367 012c 6C020000 		.word	.LC44
 368 0130 78020000 		.word	.LC45
 369 0134 88020000 		.word	.LC46
 370 0138 A0020000 		.word	.LC47
 371 013c B8020000 		.word	.LC48
 372 0140 D0020000 		.word	.LC49
 373 0144 E4020000 		.word	.LC50
 374 0148 F4020000 		.word	.LC51
 375 014c 08030000 		.word	.LC52
 376 0150 10030000 		.word	.LC53
 377 0154 20030000 		.word	.LC54
 378 0158 34030000 		.word	.LC55
 379 015c 00000000 		.word	0
 380 0160 00000000 		.word	0
 381 0164 00000000 		.word	0
 382 0168 00000000 		.word	0
 383 016c 00000000 		.word	0
 384 0170 00000000 		.word	0
 385 0174 00000000 		.word	0
 386 0178 00000000 		.word	0
 387 017c 00000000 		.word	0
 388 0180 44030000 		.word	.LC56
 389 0184 5C030000 		.word	.LC57
 390 0188 70030000 		.word	.LC58
 391 018c 84030000 		.word	.LC59
 392 0190 98030000 		.word	.LC60
 393 0194 AC030000 		.word	.LC61
 394 0198 B0030000 		.word	.LC62
 395 019c C0030000 		.word	.LC63
 396 01a0 D0030000 		.word	.LC64
 397 01a4 DC030000 		.word	.LC65
 398 01a8 F0030000 		.word	.LC66
 399 01ac 00040000 		.word	.LC67
 400 01b0 10040000 		.word	.LC68
 401 01b4 24040000 		.word	.LC69
 402 01b8 34040000 		.word	.LC70
 403 01bc 40040000 		.word	.LC71
 404 01c0 4C040000 		.word	.LC72
 405 01c4 60040000 		.word	.LC73
 406 01c8 74040000 		.word	.LC74
 407 01cc 88040000 		.word	.LC75
 408 01d0 9C040000 		.word	.LC76
 409 01d4 AC040000 		.word	.LC77
 410 01d8 B8040000 		.word	.LC78
 411 01dc C8040000 		.word	.LC79
 412 01e0 D4040000 		.word	.LC80
 413 01e4 E4040000 		.word	.LC81
 414 01e8 F0040000 		.word	.LC82
 415 01ec 08050000 		.word	.LC83
 416 01f0 18050000 		.word	.LC84
 417 01f4 24050000 		.word	.LC85
 418 01f8 30050000 		.word	.LC86
 419 01fc 40050000 		.word	.LC87
 420              		.comm	ApplicationThread,168,4
 421              		.comm	glIsApplicationActive,4,4
 422              		.section	.rodata
 423 054e 0000     		.align	2
 424              	.LC88:
 425 0550 4F504552 		.ascii	"OPERATION_DISABLED\000"
 425      4154494F 
 425      4E5F4449 
 425      5341424C 
 425      454400
 426 0563 00       		.align	2
 427              	.LC89:
 428 0564 4E4F5F52 		.ascii	"NO_REENUM_REQUIRED\000"
 428      45454E55 
 428      4D5F5245 
 428      51554952 
 428      454400
 429 0577 00       		.align	2
 430              	.LC90:
 431 0578 494E5641 		.ascii	"INVALID_ERROR_CODE\000"
 431      4C49445F 
 431      4552524F 
 431      525F434F 
 431      444500
 432              		.section	.text.ErrorCodeText,"ax",%progbits
 433              		.align	2
 434              		.global	ErrorCodeText
 436              	ErrorCodeText:
 437              	.LFB0:
 438              		.file 1 "../Support.c"
   1:../Support.c  **** /*
   2:../Support.c  ****  * Support.c - this module contains useful routines
   3:../Support.c  ****  *
   4:../Support.c  ****  *  Created on: Feb 18, 2014
   5:../Support.c  ****  *      Author: John
   6:../Support.c  ****  */
   7:../Support.c  **** 
   8:../Support.c  **** #include "Application.h"
   9:../Support.c  **** #include <stdarg.h>		// For argument processing
  10:../Support.c  **** #include <string.h>
  11:../Support.c  **** 
  12:../Support.c  **** extern uint8_t* CyU3PDebugIntToStr (uint8_t* convertedString, uint32_t num, uint8_t base);
  13:../Support.c  **** extern CyU3PReturnStatus_t I2C_DebugPrint(uint8_t Priority, char* Message, ...);
  14:../Support.c  **** extern CyBool_t I2C_DebugEnabled;       // Debug Init has been called or not
  15:../Support.c  **** 
  16:../Support.c  **** const char* ErrorCodeTextLookupTable[] = {
  17:../Support.c  **** 	"SUCCESS",				// 0
  18:../Support.c  **** 	"DELETED",				// 1
  19:../Support.c  **** 	"BAD_POOL",				// 2
  20:../Support.c  **** 	"BAD_POINTER",			// 3
  21:../Support.c  **** 	"INVALID_WAIT",			// 4
  22:../Support.c  **** 	"BAD_SIZE",				// 5
  23:../Support.c  **** 	"BAD_EVENT_GROUP",		// 6
  24:../Support.c  **** 	"NO_EVENTS",			// 7
  25:../Support.c  **** 	"BAD_OPTION",			// 8
  26:../Support.c  **** 	"BAD_QUEUE",			// 9
  27:../Support.c  **** 	"QUEUE_EMPTY",			// 10
  28:../Support.c  **** 	"QUEUE_FULL",			// 11
  29:../Support.c  **** 	"BAD_SEMAPHORE",		// 12
  30:../Support.c  **** 	"GET_SEMAPHORE_FAIL",	// 13
  31:../Support.c  **** 	"BAD_THREAD",			// 14
  32:../Support.c  **** 	"BAD_PRIORITY",			// 15
  33:../Support.c  **** 	"MEMORY_ERROR",			// 16
  34:../Support.c  **** 	"DELETE_FAILED",		// 17
  35:../Support.c  **** 	"RESUME_FAILED",		// 18
  36:../Support.c  **** 	"INVALID_CALLER",		// 19
  37:../Support.c  **** 	"SUSPEND_FAILED",		// 20
  38:../Support.c  **** 	"BAD_TIMER",			// 21
  39:../Support.c  **** 	"BAD_TICK",				// 22
  40:../Support.c  **** 	"ACTIVATE_FAILED",		// 23
  41:../Support.c  **** 	"BAD_THRESHOLD",		// 24
  42:../Support.c  **** 	"SUSPEND_LIFTED",		// 25
  43:../Support.c  **** 	"WAIT_ABORTED",			// 26
  44:../Support.c  **** 	"WAIT_ABORT_FAILED",	// 27
  45:../Support.c  **** 	"BAD_MUTEX",			// 28
  46:../Support.c  **** 	"MUTEX_FAILURE",		// 29
  47:../Support.c  **** 	"MUTEX_PUT_FAILED",		// 30
  48:../Support.c  **** 	"INHERIT_FAILED",		// 31
  49:../Support.c  **** 	"NOT_IDLE",				// 32
  50:../Support.c  **** 	0,0,0,0,0,0,0,0,		// 33-40
  51:../Support.c  **** 	0,0,0,0,0,0,0,0,		// 41-48
  52:../Support.c  **** 	0,0,0,0,0,0,0,0,		// 49-56
  53:../Support.c  **** 	0,0,0,0,0,0,0,			// 57-63
  54:../Support.c  **** 	"BAD_ARGUMENT",				// 64 = 0x40
  55:../Support.c  **** 	"NULL_POINTER",				// 65
  56:../Support.c  **** 	"NOT_STARTED",				// 66
  57:../Support.c  **** 	"ALREADY_STARTED",			// 67
  58:../Support.c  **** 	"NOT_CONFIGURED",			// 68
  59:../Support.c  **** 	"TIMEOUT",					// 69
  60:../Support.c  **** 	"NOT_SUPPORTED",			// 70
  61:../Support.c  **** 	"INVALID_SEQUENCE",			// 71
  62:../Support.c  **** 	"ABORTED",					// 72
  63:../Support.c  **** 	"DMA_FAILURE",				// 73
  64:../Support.c  **** 	"FAILURE",					// 74
  65:../Support.c  **** 	"BAD_INDEX",				// 75
  66:../Support.c  **** 	"BAD_ENUM_METHOD",			// 76
  67:../Support.c  **** 	"INVALID_CONFIGURATION",	// 77
  68:../Support.c  **** 	"CHANNEL_CREATE_FAILED",	// 78
  69:../Support.c  **** 	"CHANNEL_DESTROY_FAILED",	// 79
  70:../Support.c  **** 	"BAD_DESCRIPTOR_TYPE",		// 80
  71:../Support.c  **** 	"XFER_CANCELLED",			// 81
  72:../Support.c  **** 	"FEATURE_NOT_ENABLED",		// 82
  73:../Support.c  **** 	"STALLED",					// 83
  74:../Support.c  **** 	"BLOCK_FAILURE",			// 84
  75:../Support.c  **** 	"LOST_ARBITRATION",			// 85
  76:../Support.c  **** 	"STANDBY_FAILED",			// 86
  77:../Support.c  **** 	0,0,0,0,0,0,0,0,			// 87-94
  78:../Support.c  **** 	0,							// 95
  79:../Support.c  **** 	"INVALID_VOLTAGE_RANGE",	// 96 = 0x60
  80:../Support.c  **** 	"CARD_WRONG_RESPONSE",		// 97
  81:../Support.c  **** 	"UNSUPPORTED_CARD",			// 98
  82:../Support.c  **** 	"CARD_WRONG_STATE",			// 99
  83:../Support.c  **** 	"CMD_NOT_SUPPORTED",		// 100
  84:../Support.c  **** 	"CRC",						// 101
  85:../Support.c  **** 	"INVALID_ADDR",				// 102
  86:../Support.c  **** 	"INVALID_UNIT",				// 103
  87:../Support.c  **** 	"INVALID_DEV",				// 104
  88:../Support.c  **** 	"ALREADY_PARTITIONED",		// 105
  89:../Support.c  **** 	"NOT_PARTITIONED",			// 106
  90:../Support.c  **** 	"BAD_PARTITION",			// 107
  91:../Support.c  **** 	"READ_WRITE_ABORTED",		// 108
  92:../Support.c  **** 	"WRITE_PROTECTED",			// 109
  93:../Support.c  **** 	"SIB_INIT",					// 110
  94:../Support.c  **** 	"CARD_LOCKED",				// 111
  95:../Support.c  **** 	"CARD_LOCK_FAILURE",		// 112
  96:../Support.c  **** 	"CARD_FORCE_ERASE",			// 113
  97:../Support.c  **** 	"INVALID_BLOCKSIZE",		// 114
  98:../Support.c  **** 	"INVALID_FUNCTION",			// 115
  99:../Support.c  **** 	"TUPLE_NOT_FOUND",			// 116
 100:../Support.c  **** 	"IO_ABORTED",				// 117
 101:../Support.c  **** 	"IO_SUSPENDED",				// 118
 102:../Support.c  **** 	"ILLEGAL_CMD",				// 119
 103:../Support.c  **** 	"SDIO_UNKNOWN",				// 120
 104:../Support.c  **** 	"BAD_CMD_ARG",				// 121
 105:../Support.c  **** 	"UNINITIALIZED_FUNCTION",	// 122
 106:../Support.c  **** 	"CARD_NOT_ACTIVE",			// 123
 107:../Support.c  **** 	"DEVICE_BUSY",				// 124
 108:../Support.c  **** 	"NO_METADATA",				// 125
 109:../Support.c  **** 	"CARD_UNHEALTHY",			// 126
 110:../Support.c  **** 	"MEDIA_FAILURE",			// 127
 111:../Support.c  **** };
 112:../Support.c  **** 
 113:../Support.c  **** extern CyBool_t glDebugTxEnabled;
 114:../Support.c  **** 
 115:../Support.c  **** CyU3PThread ApplicationThread;			// Handle to my Application Thread
 116:../Support.c  **** CyBool_t glIsApplicationActive;			// Set true once device is enumerated
 117:../Support.c  **** 
 118:../Support.c  **** char* ErrorCodeText(CyU3PReturnStatus_t Status)
 119:../Support.c  **** {
 439              		.loc 1 119 0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 16
 442              		@ frame_needed = 1, uses_anonymous_args = 0
 443              		@ link register save eliminated.
 444 0000 04B02DE5 		str	fp, [sp, #-4]!
 445              	.LCFI0:
 446              		.cfi_def_cfa_offset 4
 447 0004 00B08DE2 		add	fp, sp, #0
 448              		.cfi_offset 11, -4
 449              	.LCFI1:
 450              		.cfi_def_cfa_register 11
 451 0008 14D04DE2 		sub	sp, sp, #20
 452 000c 10000BE5 		str	r0, [fp, #-16]
 120:../Support.c  **** 	char* TextPtr;
 121:../Support.c  **** 	// Handle exceptions first
 122:../Support.c  **** 	if (Status == 0xFF) return "OPERATION_DISABLED";
 453              		.loc 1 122 0
 454 0010 10301BE5 		ldr	r3, [fp, #-16]
 455 0014 FF0053E3 		cmp	r3, #255
 456 0018 0100001A 		bne	.L2
 457              		.loc 1 122 0 is_stmt 0 discriminator 1
 458 001c 60309FE5 		ldr	r3, .L7
 459 0020 130000EA 		b	.L3
 460              	.L2:
 123:../Support.c  **** 	if (Status == 0xFE) return "NO_REENUM_REQUIRED";
 461              		.loc 1 123 0 is_stmt 1
 462 0024 10301BE5 		ldr	r3, [fp, #-16]
 463 0028 FE0053E3 		cmp	r3, #254
 464 002c 0100001A 		bne	.L4
 465              		.loc 1 123 0 is_stmt 0 discriminator 1
 466 0030 50309FE5 		ldr	r3, .L7+4
 467 0034 0E0000EA 		b	.L3
 468              	.L4:
 124:../Support.c  **** 	if (Status > 127) return "INVALID_ERROR_CODE";
 469              		.loc 1 124 0 is_stmt 1
 470 0038 10301BE5 		ldr	r3, [fp, #-16]
 471 003c 7F0053E3 		cmp	r3, #127
 472 0040 0100009A 		bls	.L5
 473              		.loc 1 124 0 is_stmt 0 discriminator 1
 474 0044 40309FE5 		ldr	r3, .L7+8
 475 0048 090000EA 		b	.L3
 476              	.L5:
 125:../Support.c  **** 	TextPtr = (char*)ErrorCodeTextLookupTable[Status];
 477              		.loc 1 125 0 is_stmt 1
 478 004c 3C309FE5 		ldr	r3, .L7+12
 479 0050 10201BE5 		ldr	r2, [fp, #-16]
 480 0054 023193E7 		ldr	r3, [r3, r2, asl #2]
 481 0058 08300BE5 		str	r3, [fp, #-8]
 126:../Support.c  **** 	if (TextPtr) return TextPtr;
 482              		.loc 1 126 0
 483 005c 08301BE5 		ldr	r3, [fp, #-8]
 484 0060 000053E3 		cmp	r3, #0
 485 0064 0100000A 		beq	.L6
 486              		.loc 1 126 0 is_stmt 0 discriminator 1
 487 0068 08301BE5 		ldr	r3, [fp, #-8]
 488 006c 000000EA 		b	.L3
 489              	.L6:
 127:../Support.c  **** 	return "INVALID_ERROR_CODE";
 490              		.loc 1 127 0 is_stmt 1
 491 0070 14309FE5 		ldr	r3, .L7+8
 492              	.L3:
 128:../Support.c  **** }
 493              		.loc 1 128 0
 494 0074 0300A0E1 		mov	r0, r3
 495 0078 00D08BE2 		add	sp, fp, #0
 496 007c 04B09DE4 		ldmfd	sp!, {fp}
 497 0080 1EFF2FE1 		bx	lr
 498              	.L8:
 499              		.align	2
 500              	.L7:
 501 0084 50050000 		.word	.LC88
 502 0088 64050000 		.word	.LC89
 503 008c 78050000 		.word	.LC90
 504 0090 00000000 		.word	ErrorCodeTextLookupTable
 505              		.cfi_endproc
 506              	.LFE0:
 508              		.section	.rodata
 509 058b 00       		.align	2
 510              	.LC91:
 511 058c 0A257320 		.ascii	"\012%s Successful\000"
 511      53756363 
 511      65737366 
 511      756C00
 512 059b 00       		.align	2
 513              	.LC92:
 514 059c 0A257320 		.ascii	"\012%s failed, %d = CY_U3P_ERROR_%s\012\000"
 514      6661696C 
 514      65642C20 
 514      2564203D 
 514      2043595F 
 515 05be 0000     		.section	.text.CheckStatus,"ax",%progbits
 516              		.align	2
 517              		.global	CheckStatus
 519              	CheckStatus:
 520              	.LFB1:
 129:../Support.c  **** 
 130:../Support.c  **** void CheckStatus(char* StringPtr, CyU3PReturnStatus_t Status)
 131:../Support.c  **** // In this initial debugging stage I stall on an un-successful system call, else I display progress
 132:../Support.c  **** {
 521              		.loc 1 132 0
 522              		.cfi_startproc
 523              		@ args = 0, pretend = 0, frame = 8
 524              		@ frame_needed = 1, uses_anonymous_args = 0
 525 0000 00482DE9 		stmfd	sp!, {fp, lr}
 526              	.LCFI2:
 527              		.cfi_def_cfa_offset 8
 528 0004 04B08DE2 		add	fp, sp, #4
 529              		.cfi_offset 14, -4
 530              		.cfi_offset 11, -8
 531              	.LCFI3:
 532              		.cfi_def_cfa 11, 4
 533 0008 10D04DE2 		sub	sp, sp, #16
 534 000c 08000BE5 		str	r0, [fp, #-8]
 535 0010 0C100BE5 		str	r1, [fp, #-12]
 133:../Support.c  **** 	if (glDebugTxEnabled || I2C_DebugEnabled)				// Need to wait until ConsoleOut is enabled
 536              		.loc 1 133 0
 537 0014 64309FE5 		ldr	r3, .L13
 538 0018 003093E5 		ldr	r3, [r3, #0]
 539 001c 000053E3 		cmp	r3, #0
 540 0020 0300001A 		bne	.L10
 541              		.loc 1 133 0 is_stmt 0 discriminator 1
 542 0024 58309FE5 		ldr	r3, .L13+4
 543 0028 003093E5 		ldr	r3, [r3, #0]
 544 002c 000053E3 		cmp	r3, #0
 545 0030 1000000A 		beq	.L9
 546              	.L10:
 134:../Support.c  **** 	{
 135:../Support.c  **** 		if (Status == CY_U3P_SUCCESS)
 547              		.loc 1 135 0 is_stmt 1
 548 0034 0C301BE5 		ldr	r3, [fp, #-12]
 549 0038 000053E3 		cmp	r3, #0
 550 003c 0400001A 		bne	.L12
 136:../Support.c  **** 		{
 137:../Support.c  **** 			DebugPrint(8, "\n%s Successful", StringPtr);
 551              		.loc 1 137 0
 552 0040 0800A0E3 		mov	r0, #8
 553 0044 3C109FE5 		ldr	r1, .L13+8
 554 0048 08201BE5 		ldr	r2, [fp, #-8]
 555 004c FEFFFFEB 		bl	I2C_DebugPrint
 138:../Support.c  **** 			return;
 556              		.loc 1 138 0
 557 0050 080000EA 		b	.L9
 558              	.L12:
 139:../Support.c  **** 		}
 140:../Support.c  **** 		// else hang here
 141:../Support.c  **** 		DebugPrint(4, "\n%s failed, %d = CY_U3P_ERROR_%s\n", StringPtr, Status, ErrorCodeText(Status));
 559              		.loc 1 141 0
 560 0054 0C001BE5 		ldr	r0, [fp, #-12]
 561 0058 FEFFFFEB 		bl	ErrorCodeText
 562 005c 0030A0E1 		mov	r3, r0
 563 0060 00308DE5 		str	r3, [sp, #0]
 564 0064 0400A0E3 		mov	r0, #4
 565 0068 1C109FE5 		ldr	r1, .L13+12
 566 006c 08201BE5 		ldr	r2, [fp, #-8]
 567 0070 0C301BE5 		ldr	r3, [fp, #-12]
 568 0074 FEFFFFEB 		bl	I2C_DebugPrint
 569              	.L9:
 142:../Support.c  **** #if 0
 143:../Support.c  **** 		while (1)
 144:../Support.c  **** 		{
 145:../Support.c  **** 			DebugPrint(4, "?");
 146:../Support.c  **** 			CyU3PThreadSleep(1000);
 147:../Support.c  **** 		}
 148:../Support.c  **** #endif
 149:../Support.c  **** 	}
 150:../Support.c  **** }
 570              		.loc 1 150 0
 571 0078 04D04BE2 		sub	sp, fp, #4
 572 007c 0088BDE8 		ldmfd	sp!, {fp, pc}
 573              	.L14:
 574              		.align	2
 575              	.L13:
 576 0080 00000000 		.word	glDebugTxEnabled
 577 0084 00000000 		.word	I2C_DebugEnabled
 578 0088 8C050000 		.word	.LC91
 579 008c 9C050000 		.word	.LC92
 580              		.cfi_endproc
 581              	.LFE1:
 583              		.section	.text.Swap4Bytes,"ax",%progbits
 584              		.align	2
 585              		.global	Swap4Bytes
 587              	Swap4Bytes:
 588              	.LFB2:
 151:../Support.c  **** 
 152:../Support.c  **** uint32_t Swap4Bytes(uint32_t Value)
 153:../Support.c  **** {
 589              		.loc 1 153 0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 16
 592              		@ frame_needed = 1, uses_anonymous_args = 0
 593              		@ link register save eliminated.
 594 0000 04B02DE5 		str	fp, [sp, #-4]!
 595              	.LCFI4:
 596              		.cfi_def_cfa_offset 4
 597 0004 00B08DE2 		add	fp, sp, #0
 598              		.cfi_offset 11, -4
 599              	.LCFI5:
 600              		.cfi_def_cfa_register 11
 601 0008 14D04DE2 		sub	sp, sp, #20
 602 000c 10000BE5 		str	r0, [fp, #-16]
 154:../Support.c  **** 	union { uint32_t D; uint8_t B[4]; } Temp;
 155:../Support.c  **** 	uint8_t TempByte;
 156:../Support.c  **** //	DebugPrint(4, "\nSwapIn = %X", Value);
 157:../Support.c  **** 	Temp.D = Value;
 603              		.loc 1 157 0
 604 0010 10301BE5 		ldr	r3, [fp, #-16]
 605 0014 0C300BE5 		str	r3, [fp, #-12]
 158:../Support.c  **** 	TempByte = Temp.B[3];
 606              		.loc 1 158 0
 607 0018 09305BE5 		ldrb	r3, [fp, #-9]
 608 001c 05304BE5 		strb	r3, [fp, #-5]
 159:../Support.c  **** 	Temp.B[3] = Temp.B[0];
 609              		.loc 1 159 0
 610 0020 0C305BE5 		ldrb	r3, [fp, #-12]	@ zero_extendqisi2
 611 0024 09304BE5 		strb	r3, [fp, #-9]
 160:../Support.c  **** 	Temp.B[0] = TempByte;
 612              		.loc 1 160 0
 613 0028 05305BE5 		ldrb	r3, [fp, #-5]
 614 002c 0C304BE5 		strb	r3, [fp, #-12]
 161:../Support.c  **** 	TempByte = Temp.B[2];
 615              		.loc 1 161 0
 616 0030 0A305BE5 		ldrb	r3, [fp, #-10]
 617 0034 05304BE5 		strb	r3, [fp, #-5]
 162:../Support.c  **** 	Temp.B[2] = Temp.B[1];
 618              		.loc 1 162 0
 619 0038 0B305BE5 		ldrb	r3, [fp, #-11]	@ zero_extendqisi2
 620 003c 0A304BE5 		strb	r3, [fp, #-10]
 163:../Support.c  **** 	Temp.B[1] = TempByte;
 621              		.loc 1 163 0
 622 0040 05305BE5 		ldrb	r3, [fp, #-5]
 623 0044 0B304BE5 		strb	r3, [fp, #-11]
 164:../Support.c  **** //	DebugPrint(4, "\nSwapOut = %X", Temp.D);
 165:../Support.c  **** 	return Temp.D;
 624              		.loc 1 165 0
 625 0048 0C301BE5 		ldr	r3, [fp, #-12]
 166:../Support.c  **** }
 626              		.loc 1 166 0
 627 004c 0300A0E1 		mov	r0, r3
 628 0050 00D08BE2 		add	sp, fp, #0
 629 0054 04B09DE4 		ldmfd	sp!, {fp}
 630 0058 1EFF2FE1 		bx	lr
 631              		.cfi_endproc
 632              	.LFE2:
 634              		.section	.text.MyDebugSNPrint,"ax",%progbits
 635              		.align	2
 636              		.global	MyDebugSNPrint
 638              	MyDebugSNPrint:
 639              	.LFB3:
 167:../Support.c  **** 
 168:../Support.c  **** // Use a routine cut and paste from cyU3debug.c (it was declared static so was not callable)
 169:../Support.c  **** CyU3PReturnStatus_t MyDebugSNPrint (
 170:../Support.c  ****         uint8_t  *debugMsg,
 171:../Support.c  ****         uint16_t *length,
 172:../Support.c  ****         char     *message,
 173:../Support.c  ****         va_list   argp)
 174:../Support.c  **** {
 640              		.loc 1 174 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 64
 643              		@ frame_needed = 1, uses_anonymous_args = 0
 644 0000 00482DE9 		stmfd	sp!, {fp, lr}
 645              	.LCFI6:
 646              		.cfi_def_cfa_offset 8
 647 0004 04B08DE2 		add	fp, sp, #4
 648              		.cfi_offset 14, -4
 649              		.cfi_offset 11, -8
 650              	.LCFI7:
 651              		.cfi_def_cfa 11, 4
 652 0008 40D04DE2 		sub	sp, sp, #64
 653 000c 38000BE5 		str	r0, [fp, #-56]
 654 0010 3C100BE5 		str	r1, [fp, #-60]
 655 0014 40200BE5 		str	r2, [fp, #-64]
 656 0018 44300BE5 		str	r3, [fp, #-68]
 175:../Support.c  ****     uint8_t  *string_p;
 176:../Support.c  ****     uint8_t  *argStr = NULL;
 657              		.loc 1 176 0
 658 001c 0030A0E3 		mov	r3, #0
 659 0020 0C300BE5 		str	r3, [fp, #-12]
 177:../Support.c  ****     CyBool_t  copyReqd = CyFalse;
 660              		.loc 1 177 0
 661 0024 0030A0E3 		mov	r3, #0
 662 0028 10300BE5 		str	r3, [fp, #-16]
 178:../Support.c  ****     uint16_t  i = 0, j, maxLength = *length;
 663              		.loc 1 178 0
 664 002c 0030A0E3 		mov	r3, #0
 665 0030 B2314BE1 		strh	r3, [fp, #-18]	@ movhi
 666 0034 3C301BE5 		ldr	r3, [fp, #-60]
 667 0038 B030D3E1 		ldrh	r3, [r3, #0]	@ movhi
 668 003c BA314BE1 		strh	r3, [fp, #-26]	@ movhi
 179:../Support.c  ****     int32_t   intArg;
 180:../Support.c  ****     uint32_t  uintArg;
 181:../Support.c  ****     uint8_t   convertedString[11];
 182:../Support.c  **** 
 183:../Support.c  ****     if (debugMsg == 0)
 669              		.loc 1 183 0
 670 0040 38301BE5 		ldr	r3, [fp, #-56]
 671 0044 000053E3 		cmp	r3, #0
 672 0048 0100001A 		bne	.L17
 184:../Support.c  ****         return CY_U3P_ERROR_BAD_ARGUMENT;
 673              		.loc 1 184 0
 674 004c 4030A0E3 		mov	r3, #64
 675 0050 B30000EA 		b	.L18
 676              	.L17:
 185:../Support.c  **** 
 186:../Support.c  ****     /* Parse the string and copy into the buffer for sending out. */
 187:../Support.c  ****     for (string_p = (uint8_t *)message; (*string_p != '\0'); string_p++)
 677              		.loc 1 187 0
 678 0054 40301BE5 		ldr	r3, [fp, #-64]
 679 0058 08300BE5 		str	r3, [fp, #-8]
 680 005c A30000EA 		b	.L19
 681              	.L34:
 188:../Support.c  ****     {
 189:../Support.c  ****         if (i >= (maxLength - 2))
 682              		.loc 1 189 0
 683 0060 B2215BE1 		ldrh	r2, [fp, #-18]
 684 0064 BA315BE1 		ldrh	r3, [fp, #-26]
 685 0068 023043E2 		sub	r3, r3, #2
 686 006c 030052E1 		cmp	r2, r3
 687 0070 010000BA 		blt	.L20
 190:../Support.c  ****             return CY_U3P_ERROR_BAD_ARGUMENT;
 688              		.loc 1 190 0
 689 0074 4030A0E3 		mov	r3, #64
 690 0078 A90000EA 		b	.L18
 691              	.L20:
 191:../Support.c  **** 
 192:../Support.c  ****         if (*string_p != '%')
 692              		.loc 1 192 0
 693 007c 08301BE5 		ldr	r3, [fp, #-8]
 694 0080 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 695 0084 250053E3 		cmp	r3, #37
 696 0088 0900000A 		beq	.L21
 193:../Support.c  ****         {
 194:../Support.c  ****             debugMsg[i++] = *string_p;
 697              		.loc 1 194 0
 698 008c B2315BE1 		ldrh	r3, [fp, #-18]
 699 0090 38201BE5 		ldr	r2, [fp, #-56]
 700 0094 033082E0 		add	r3, r2, r3
 701 0098 08201BE5 		ldr	r2, [fp, #-8]
 702 009c 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 703 00a0 0020C3E5 		strb	r2, [r3, #0]
 704 00a4 B2315BE1 		ldrh	r3, [fp, #-18]	@ movhi
 705 00a8 013083E2 		add	r3, r3, #1
 706 00ac B2314BE1 		strh	r3, [fp, #-18]	@ movhi
 195:../Support.c  ****             continue;
 707              		.loc 1 195 0
 708 00b0 8B0000EA 		b	.L22
 709              	.L21:
 196:../Support.c  ****         }
 197:../Support.c  **** 
 198:../Support.c  ****         string_p++;
 710              		.loc 1 198 0
 711 00b4 08301BE5 		ldr	r3, [fp, #-8]
 712 00b8 013083E2 		add	r3, r3, #1
 713 00bc 08300BE5 		str	r3, [fp, #-8]
 199:../Support.c  ****         switch (*string_p)
 714              		.loc 1 199 0
 715 00c0 08301BE5 		ldr	r3, [fp, #-8]
 716 00c4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 717 00c8 640053E3 		cmp	r3, #100
 718 00cc 2500000A 		beq	.L27
 719 00d0 640053E3 		cmp	r3, #100
 720 00d4 060000CA 		bgt	.L30
 721 00d8 580053E3 		cmp	r3, #88
 722 00dc 5400000A 		beq	.L25
 723 00e0 630053E3 		cmp	r3, #99
 724 00e4 1200000A 		beq	.L26
 725 00e8 250053E3 		cmp	r3, #37
 726 00ec 0700000A 		beq	.L24
 727 00f0 5D0000EA 		b	.L23
 728              	.L30:
 729 00f4 750053E3 		cmp	r3, #117
 730 00f8 3F00000A 		beq	.L29
 731 00fc 780053E3 		cmp	r3, #120
 732 0100 4B00000A 		beq	.L25
 733 0104 730053E3 		cmp	r3, #115
 734 0108 3300000A 		beq	.L28
 735 010c 560000EA 		b	.L23
 736              	.L24:
 200:../Support.c  ****         {
 201:../Support.c  ****         case '%' :
 202:../Support.c  ****             {
 203:../Support.c  ****                 debugMsg[i++] = '%';
 737              		.loc 1 203 0
 738 0110 B2315BE1 		ldrh	r3, [fp, #-18]
 739 0114 38201BE5 		ldr	r2, [fp, #-56]
 740 0118 033082E0 		add	r3, r2, r3
 741 011c 2520A0E3 		mov	r2, #37
 742 0120 0020C3E5 		strb	r2, [r3, #0]
 743 0124 B2315BE1 		ldrh	r3, [fp, #-18]	@ movhi
 744 0128 013083E2 		add	r3, r3, #1
 745 012c B2314BE1 		strh	r3, [fp, #-18]	@ movhi
 204:../Support.c  ****             }
 205:../Support.c  ****             break;
 746              		.loc 1 205 0
 747 0130 4F0000EA 		b	.L31
 748              	.L26:
 206:../Support.c  **** 
 207:../Support.c  ****         case 'c' :
 208:../Support.c  ****             {
 209:../Support.c  ****                 debugMsg[i++] = (uint8_t)va_arg (argp, int32_t);
 749              		.loc 1 209 0
 750 0134 B2315BE1 		ldrh	r3, [fp, #-18]
 751 0138 38201BE5 		ldr	r2, [fp, #-56]
 752 013c 032082E0 		add	r2, r2, r3
 753 0140 44301BE5 		ldr	r3, [fp, #-68]
 754 0144 041083E2 		add	r1, r3, #4
 755 0148 44100BE5 		str	r1, [fp, #-68]
 756 014c 003093E5 		ldr	r3, [r3, #0]
 757 0150 FF3003E2 		and	r3, r3, #255
 758 0154 0030C2E5 		strb	r3, [r2, #0]
 759 0158 B2315BE1 		ldrh	r3, [fp, #-18]	@ movhi
 760 015c 013083E2 		add	r3, r3, #1
 761 0160 B2314BE1 		strh	r3, [fp, #-18]	@ movhi
 210:../Support.c  ****             }
 211:../Support.c  ****             break;
 762              		.loc 1 211 0
 763 0164 420000EA 		b	.L31
 764              	.L27:
 212:../Support.c  **** 
 213:../Support.c  ****         case 'd' :
 214:../Support.c  ****             {
 215:../Support.c  ****                 intArg = va_arg (argp, int32_t);
 765              		.loc 1 215 0
 766 0168 44301BE5 		ldr	r3, [fp, #-68]
 767 016c 042083E2 		add	r2, r3, #4
 768 0170 44200BE5 		str	r2, [fp, #-68]
 769 0174 003093E5 		ldr	r3, [r3, #0]
 770 0178 18300BE5 		str	r3, [fp, #-24]
 216:../Support.c  ****                 if (intArg < 0)
 771              		.loc 1 216 0
 772 017c 18301BE5 		ldr	r3, [fp, #-24]
 773 0180 000053E3 		cmp	r3, #0
 774 0184 0A0000AA 		bge	.L32
 217:../Support.c  ****                 {
 218:../Support.c  ****                     debugMsg[i++] = '-';
 775              		.loc 1 218 0
 776 0188 B2315BE1 		ldrh	r3, [fp, #-18]
 777 018c 38201BE5 		ldr	r2, [fp, #-56]
 778 0190 033082E0 		add	r3, r2, r3
 779 0194 2D20A0E3 		mov	r2, #45
 780 0198 0020C3E5 		strb	r2, [r3, #0]
 781 019c B2315BE1 		ldrh	r3, [fp, #-18]	@ movhi
 782 01a0 013083E2 		add	r3, r3, #1
 783 01a4 B2314BE1 		strh	r3, [fp, #-18]	@ movhi
 219:../Support.c  ****                     intArg = -intArg;
 784              		.loc 1 219 0
 785 01a8 18301BE5 		ldr	r3, [fp, #-24]
 786 01ac 003063E2 		rsb	r3, r3, #0
 787 01b0 18300BE5 		str	r3, [fp, #-24]
 788              	.L32:
 220:../Support.c  ****                 }
 221:../Support.c  **** 
 222:../Support.c  ****                 argStr = CyU3PDebugIntToStr (convertedString, intArg, 10);
 789              		.loc 1 222 0
 790 01b4 18301BE5 		ldr	r3, [fp, #-24]
 791 01b8 30204BE2 		sub	r2, fp, #48
 792 01bc 0200A0E1 		mov	r0, r2
 793 01c0 0310A0E1 		mov	r1, r3
 794 01c4 0A20A0E3 		mov	r2, #10
 795 01c8 FEFFFFEB 		bl	CyU3PDebugIntToStr
 796 01cc 0C000BE5 		str	r0, [fp, #-12]
 223:../Support.c  ****                 copyReqd = CyTrue;
 797              		.loc 1 223 0
 798 01d0 0130A0E3 		mov	r3, #1
 799 01d4 10300BE5 		str	r3, [fp, #-16]
 224:../Support.c  ****             }
 225:../Support.c  ****             break;
 800              		.loc 1 225 0
 801 01d8 250000EA 		b	.L31
 802              	.L28:
 226:../Support.c  **** 
 227:../Support.c  ****         case 's':
 228:../Support.c  ****             {
 229:../Support.c  ****                 argStr = va_arg (argp, uint8_t *);
 803              		.loc 1 229 0
 804 01dc 44301BE5 		ldr	r3, [fp, #-68]
 805 01e0 042083E2 		add	r2, r3, #4
 806 01e4 44200BE5 		str	r2, [fp, #-68]
 807 01e8 003093E5 		ldr	r3, [r3, #0]
 808 01ec 0C300BE5 		str	r3, [fp, #-12]
 230:../Support.c  ****                 copyReqd = CyTrue;
 809              		.loc 1 230 0
 810 01f0 0130A0E3 		mov	r3, #1
 811 01f4 10300BE5 		str	r3, [fp, #-16]
 231:../Support.c  ****             }
 232:../Support.c  ****             break;
 812              		.loc 1 232 0
 813 01f8 1D0000EA 		b	.L31
 814              	.L29:
 233:../Support.c  **** 
 234:../Support.c  ****         case 'u':
 235:../Support.c  ****             {
 236:../Support.c  ****                 uintArg = va_arg (argp, uint32_t);
 815              		.loc 1 236 0
 816 01fc 44301BE5 		ldr	r3, [fp, #-68]
 817 0200 042083E2 		add	r2, r3, #4
 818 0204 44200BE5 		str	r2, [fp, #-68]
 819 0208 003093E5 		ldr	r3, [r3, #0]
 820 020c 20300BE5 		str	r3, [fp, #-32]
 237:../Support.c  ****                 argStr = CyU3PDebugIntToStr (convertedString, uintArg, 10);
 821              		.loc 1 237 0
 822 0210 30304BE2 		sub	r3, fp, #48
 823 0214 0300A0E1 		mov	r0, r3
 824 0218 20101BE5 		ldr	r1, [fp, #-32]
 825 021c 0A20A0E3 		mov	r2, #10
 826 0220 FEFFFFEB 		bl	CyU3PDebugIntToStr
 827 0224 0C000BE5 		str	r0, [fp, #-12]
 238:../Support.c  ****                 copyReqd = CyTrue;
 828              		.loc 1 238 0
 829 0228 0130A0E3 		mov	r3, #1
 830 022c 10300BE5 		str	r3, [fp, #-16]
 239:../Support.c  ****             }
 240:../Support.c  ****             break;
 831              		.loc 1 240 0
 832 0230 0F0000EA 		b	.L31
 833              	.L25:
 241:../Support.c  **** 
 242:../Support.c  ****         case 'X':
 243:../Support.c  ****         case 'x':
 244:../Support.c  ****             {
 245:../Support.c  ****                 uintArg = va_arg (argp, uint32_t);
 834              		.loc 1 245 0
 835 0234 44301BE5 		ldr	r3, [fp, #-68]
 836 0238 042083E2 		add	r2, r3, #4
 837 023c 44200BE5 		str	r2, [fp, #-68]
 838 0240 003093E5 		ldr	r3, [r3, #0]
 839 0244 20300BE5 		str	r3, [fp, #-32]
 246:../Support.c  ****                 argStr = CyU3PDebugIntToStr (convertedString, uintArg, 16);
 840              		.loc 1 246 0
 841 0248 30304BE2 		sub	r3, fp, #48
 842 024c 0300A0E1 		mov	r0, r3
 843 0250 20101BE5 		ldr	r1, [fp, #-32]
 844 0254 1020A0E3 		mov	r2, #16
 845 0258 FEFFFFEB 		bl	CyU3PDebugIntToStr
 846 025c 0C000BE5 		str	r0, [fp, #-12]
 247:../Support.c  ****                 copyReqd = CyTrue;
 847              		.loc 1 247 0
 848 0260 0130A0E3 		mov	r3, #1
 849 0264 10300BE5 		str	r3, [fp, #-16]
 248:../Support.c  ****             }
 249:../Support.c  ****             break;
 850              		.loc 1 249 0
 851 0268 010000EA 		b	.L31
 852              	.L23:
 250:../Support.c  **** 
 251:../Support.c  ****         default:
 252:../Support.c  ****             return CY_U3P_ERROR_BAD_ARGUMENT;
 853              		.loc 1 252 0
 854 026c 4030A0E3 		mov	r3, #64
 855 0270 2B0000EA 		b	.L18
 856              	.L31:
 253:../Support.c  ****         }
 254:../Support.c  **** 
 255:../Support.c  ****         if (copyReqd)
 857              		.loc 1 255 0
 858 0274 10301BE5 		ldr	r3, [fp, #-16]
 859 0278 000053E3 		cmp	r3, #0
 860 027c 1800000A 		beq	.L22
 256:../Support.c  ****         {
 257:../Support.c  ****             j = (uint16_t)strlen ((char *)argStr);
 861              		.loc 1 257 0
 862 0280 0C001BE5 		ldr	r0, [fp, #-12]
 863 0284 FEFFFFEB 		bl	strlen
 864 0288 0030A0E1 		mov	r3, r0
 865 028c B2324BE1 		strh	r3, [fp, #-34]	@ movhi
 258:../Support.c  ****             if (i >= (maxLength - j - 1))
 866              		.loc 1 258 0
 867 0290 B2215BE1 		ldrh	r2, [fp, #-18]
 868 0294 BA115BE1 		ldrh	r1, [fp, #-26]
 869 0298 B2325BE1 		ldrh	r3, [fp, #-34]
 870 029c 013063E0 		rsb	r3, r3, r1
 871 02a0 013043E2 		sub	r3, r3, #1
 872 02a4 030052E1 		cmp	r2, r3
 873 02a8 010000BA 		blt	.L33
 259:../Support.c  ****                 return CY_U3P_ERROR_BAD_ARGUMENT;
 874              		.loc 1 259 0
 875 02ac 4030A0E3 		mov	r3, #64
 876 02b0 1B0000EA 		b	.L18
 877              	.L33:
 260:../Support.c  ****             strcpy ((char *)(debugMsg + i), (char *)argStr);
 878              		.loc 1 260 0
 879 02b4 B2315BE1 		ldrh	r3, [fp, #-18]
 880 02b8 38201BE5 		ldr	r2, [fp, #-56]
 881 02bc 033082E0 		add	r3, r2, r3
 882 02c0 0300A0E1 		mov	r0, r3
 883 02c4 0C101BE5 		ldr	r1, [fp, #-12]
 884 02c8 FEFFFFEB 		bl	strcpy
 261:../Support.c  ****             i += j;
 885              		.loc 1 261 0
 886 02cc B2215BE1 		ldrh	r2, [fp, #-18]	@ movhi
 887 02d0 B2325BE1 		ldrh	r3, [fp, #-34]	@ movhi
 888 02d4 033082E0 		add	r3, r2, r3
 889 02d8 B2314BE1 		strh	r3, [fp, #-18]	@ movhi
 262:../Support.c  ****             copyReqd = CyFalse;
 890              		.loc 1 262 0
 891 02dc 0030A0E3 		mov	r3, #0
 892 02e0 10300BE5 		str	r3, [fp, #-16]
 893              	.L22:
 187:../Support.c  ****     for (string_p = (uint8_t *)message; (*string_p != '\0'); string_p++)
 894              		.loc 1 187 0
 895 02e4 08301BE5 		ldr	r3, [fp, #-8]
 896 02e8 013083E2 		add	r3, r3, #1
 897 02ec 08300BE5 		str	r3, [fp, #-8]
 898              	.L19:
 187:../Support.c  ****     for (string_p = (uint8_t *)message; (*string_p != '\0'); string_p++)
 899              		.loc 1 187 0 is_stmt 0 discriminator 1
 900 02f0 08301BE5 		ldr	r3, [fp, #-8]
 901 02f4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 902 02f8 000053E3 		cmp	r3, #0
 903 02fc 57FFFF1A 		bne	.L34
 263:../Support.c  ****         }
 264:../Support.c  ****     }
 265:../Support.c  **** 
 266:../Support.c  ****     /* NULL-terminate the string. There will always be space for this. */
 267:../Support.c  ****     debugMsg[i] = '\0';
 904              		.loc 1 267 0 is_stmt 1
 905 0300 B2315BE1 		ldrh	r3, [fp, #-18]
 906 0304 38201BE5 		ldr	r2, [fp, #-56]
 907 0308 033082E0 		add	r3, r2, r3
 908 030c 0020A0E3 		mov	r2, #0
 909 0310 0020C3E5 		strb	r2, [r3, #0]
 268:../Support.c  ****     *length     = i;
 910              		.loc 1 268 0
 911 0314 3C301BE5 		ldr	r3, [fp, #-60]
 912 0318 B2215BE1 		ldrh	r2, [fp, #-18]	@ movhi
 913 031c B020C3E1 		strh	r2, [r3, #0]	@ movhi
 269:../Support.c  **** 
 270:../Support.c  ****     return CY_U3P_SUCCESS;
 914              		.loc 1 270 0
 915 0320 0030A0E3 		mov	r3, #0
 916              	.L18:
 271:../Support.c  **** }
 917              		.loc 1 271 0
 918 0324 0300A0E1 		mov	r0, r3
 919 0328 04D04BE2 		sub	sp, fp, #4
 920 032c 0088BDE8 		ldmfd	sp!, {fp, pc}
 921              		.cfi_endproc
 922              	.LFE3:
 924              		.text
 925              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 Support.c
C:\Users\John\AppData\Local\Temp\ccXIzEAl.s:291    .data.ErrorCodeTextLookupTable:00000000 ErrorCodeTextLookupTable
C:\Users\John\AppData\Local\Temp\ccXIzEAl.s:23     .rodata:00000000 $d
C:\Users\John\AppData\Local\Temp\ccXIzEAl.s:288    .data.ErrorCodeTextLookupTable:00000000 $d
                            *COM*:000000a8 ApplicationThread
                            *COM*:00000004 glIsApplicationActive
C:\Users\John\AppData\Local\Temp\ccXIzEAl.s:433    .text.ErrorCodeText:00000000 $a
C:\Users\John\AppData\Local\Temp\ccXIzEAl.s:436    .text.ErrorCodeText:00000000 ErrorCodeText
C:\Users\John\AppData\Local\Temp\ccXIzEAl.s:501    .text.ErrorCodeText:00000084 $d
C:\Users\John\AppData\Local\Temp\ccXIzEAl.s:516    .text.CheckStatus:00000000 $a
C:\Users\John\AppData\Local\Temp\ccXIzEAl.s:519    .text.CheckStatus:00000000 CheckStatus
C:\Users\John\AppData\Local\Temp\ccXIzEAl.s:576    .text.CheckStatus:00000080 $d
C:\Users\John\AppData\Local\Temp\ccXIzEAl.s:584    .text.Swap4Bytes:00000000 $a
C:\Users\John\AppData\Local\Temp\ccXIzEAl.s:587    .text.Swap4Bytes:00000000 Swap4Bytes
C:\Users\John\AppData\Local\Temp\ccXIzEAl.s:635    .text.MyDebugSNPrint:00000000 $a
C:\Users\John\AppData\Local\Temp\ccXIzEAl.s:638    .text.MyDebugSNPrint:00000000 MyDebugSNPrint
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
I2C_DebugPrint
glDebugTxEnabled
I2C_DebugEnabled
CyU3PDebugIntToStr
strlen
strcpy
