   1              		.cpu arm926ej-s
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"StartUp.c"
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.comm	Status,4,4
  22              		.comm	GpioConfig,20,4
  23              		.section	.text.main,"ax",%progbits
  24              		.align	2
  25              		.global	main
  27              	main:
  28              	.LFB0:
  29              		.file 1 "../StartUp.c"
   1:../StartUp.c  **** //	StartUp.c - used by all applications to set up the CPU environment and start the RTOS
   2:../StartUp.c  **** //
   3:../StartUp.c  **** //	john@usb-by-example.com
   4:../StartUp.c  **** //
   5:../StartUp.c  **** 
   6:../StartUp.c  **** #include "Application.h"
   7:../StartUp.c  **** 
   8:../StartUp.c  **** 	CyU3PReturnStatus_t Status;
   9:../StartUp.c  ****     CyU3PGpioSimpleConfig_t GpioConfig;
  10:../StartUp.c  **** 
  11:../StartUp.c  **** 
  12:../StartUp.c  **** int main (void)
  13:../StartUp.c  **** {
  30              		.loc 1 13 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 48
  33              		@ frame_needed = 1, uses_anonymous_args = 0
  34 0000 00482DE9 		stmfd	sp!, {fp, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37 0004 04B08DE2 		add	fp, sp, #4
  38              		.cfi_offset 14, -4
  39              		.cfi_offset 11, -8
  40              	.LCFI1:
  41              		.cfi_def_cfa 11, 4
  42 0008 30D04DE2 		sub	sp, sp, #48
  14:../StartUp.c  ****     CyU3PIoMatrixConfig_t ioConfig;
  15:../StartUp.c  ****     CyU3PReturnStatus_t Status;
  16:../StartUp.c  **** 
  17:../StartUp.c  **** // Start CPU with a default clock (384MHz), caches enabled and just the UART enabled
  18:../StartUp.c  **** 	Status = CyU3PDeviceInit(0);
  43              		.loc 1 18 0
  44 000c 0000A0E3 		mov	r0, #0
  45 0010 FEFFFFEB 		bl	CyU3PDeviceInit
  46 0014 08000BE5 		str	r0, [fp, #-8]
  19:../StartUp.c  **** 	if (Status == CY_U3P_SUCCESS)
  47              		.loc 1 19 0
  48 0018 08301BE5 		ldr	r3, [fp, #-8]
  49 001c 000053E3 		cmp	r3, #0
  50 0020 1800001A 		bne	.L2
  20:../StartUp.c  ****     {
  21:../StartUp.c  **** 		Status = CyU3PDeviceCacheControl(CyTrue, CyTrue, CyTrue);
  51              		.loc 1 21 0
  52 0024 0100A0E3 		mov	r0, #1
  53 0028 0110A0E3 		mov	r1, #1
  54 002c 0120A0E3 		mov	r2, #1
  55 0030 FEFFFFEB 		bl	CyU3PDeviceCacheControl
  56 0034 08000BE5 		str	r0, [fp, #-8]
  22:../StartUp.c  **** 		if (Status == CY_U3P_SUCCESS)
  57              		.loc 1 22 0
  58 0038 08301BE5 		ldr	r3, [fp, #-8]
  59 003c 000053E3 		cmp	r3, #0
  60 0040 1000001A 		bne	.L2
  23:../StartUp.c  **** 		{
  24:../StartUp.c  **** 			CyU3PMemSet((uint8_t *)&ioConfig, 0, sizeof(ioConfig));
  61              		.loc 1 24 0
  62 0044 30304BE2 		sub	r3, fp, #48
  63 0048 0300A0E1 		mov	r0, r3
  64 004c 0010A0E3 		mov	r1, #0
  65 0050 2820A0E3 		mov	r2, #40
  66 0054 FEFFFFEB 		bl	CyU3PMemSet
  25:../StartUp.c  **** //r			ioConfig.isDQ32Bit	= CyFalse;
  26:../StartUp.c  **** //r			ioConfig.s0Mode 	= CY_U3P_SPORT_INACTIVE;
  27:../StartUp.c  **** //r			ioConfig.s1Mode		= CY_U3P_SPORT_INACTIVE;
  28:../StartUp.c  **** 			ioConfig.useUart	= CyTrue;
  67              		.loc 1 28 0
  68 0058 0130A0E3 		mov	r3, #1
  69 005c 2C300BE5 		str	r3, [fp, #-44]
  29:../StartUp.c  **** //r			ioConfig.useI2C		= CyFalse;
  30:../StartUp.c  **** //r			ioConfig.useI2S		= CyFalse;
  31:../StartUp.c  **** //r			ioConfig.useSpi		= CyFalse;
  32:../StartUp.c  **** 			ioConfig.lppMode	= CY_U3P_IO_MATRIX_LPP_UART_ONLY;
  70              		.loc 1 32 0
  71 0060 0130A0E3 		mov	r3, #1
  72 0064 1A304BE5 		strb	r3, [fp, #-26]
  33:../StartUp.c  **** //r			ioConfig.gpioSimpleEn[0]  = 0;
  34:../StartUp.c  **** //r			ioConfig.gpioSimpleEn[1]  = 0;
  35:../StartUp.c  **** //r			ioConfig.gpioComplexEn[0] = 0;
  36:../StartUp.c  **** //r			ioConfig.gpioComplexEn[1] = 0;
  37:../StartUp.c  **** 			Status = CyU3PDeviceConfigureIOMatrix(&ioConfig);
  73              		.loc 1 37 0
  74 0068 30304BE2 		sub	r3, fp, #48
  75 006c 0300A0E1 		mov	r0, r3
  76 0070 FEFFFFEB 		bl	CyU3PDeviceConfigureIOMatrix
  77 0074 08000BE5 		str	r0, [fp, #-8]
  38:../StartUp.c  **** 			if (Status == CY_U3P_SUCCESS) CyU3PKernelEntry();	// Start RTOS, this does not return
  78              		.loc 1 38 0
  79 0078 08301BE5 		ldr	r3, [fp, #-8]
  80 007c 000053E3 		cmp	r3, #0
  81 0080 0000001A 		bne	.L2
  82              		.loc 1 38 0 is_stmt 0 discriminator 1
  83 0084 FEFFFFEB 		bl	_tx_initialize_kernel_enter
  84              	.L2:
  39:../StartUp.c  **** 		}
  40:../StartUp.c  **** 	}
  41:../StartUp.c  ****     // Get here on a failure, can't recover, just hang here
  42:../StartUp.c  **** 	// Once the programs become more complex we shall do something more elegant here!
  43:../StartUp.c  ****     while (1);
  85              		.loc 1 43 0 is_stmt 1 discriminator 1
  86 0088 FEFFFFEA 		b	.L2
  87              		.cfi_endproc
  88              	.LFE0:
  90              		.text
  91              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 StartUp.c
                            *COM*:00000004 Status
                            *COM*:00000014 GpioConfig
C:\Users\John\AppData\Local\Temp\ccIb0vgy.s:24     .text.main:00000000 $a
C:\Users\John\AppData\Local\Temp\ccIb0vgy.s:27     .text.main:00000000 main
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CyU3PDeviceInit
CyU3PDeviceCacheControl
CyU3PMemSet
CyU3PDeviceConfigureIOMatrix
_tx_initialize_kernel_enter
